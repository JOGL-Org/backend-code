{
  "profile_colloseum": {
    "id": 1016,
    "username": "jmeere"
  },
  "profile_github": "joeymeere",
  "repos": [
    {
      "repo": {
        "name": "anchor-escrow",
        "id": 465101897,
        "full_name": "joeymeere/anchor-escrow",
        "description": "Escrow program on solana with anchor + Frontend for interaction",
        "readme": "# Anchor-Escrow\n\nThis project is an escrow program made on solana.\n\n## Available Scripts\n\nIn the project directory, you can run:\n\n### `yarn install`\n\nInstalls all the dep.\\\n\n\n### `anchor build`\n\nBuilds the program for production. \\\n\n### `anchor test`\n\nTests the build program against the provided test script.\\\n\n\n### `anchor deploy`\n\nDeploys your program to the configured network.\\\n",
        "homepage": null,
        "language": null,
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2022-03-02T00:29:15Z",
        "updated_at": "2022-01-05T18:54:29Z",
        "pushed_at": "2022-01-05T18:54:22Z",
        "readme_excerpt": "Anchor-Escrow This project is an escrow program made on solana. Available Scripts In the project directory, you can run: Installs all the dep.\\ Builds the program for production. \\ Tests the build program against the provided test script.\\ Deploys your program to the configured network.\\"
      }
    },
    {
      "repo": {
        "name": "auger",
        "id": 948213240,
        "full_name": "joeymeere/auger",
        "description": "Extract data from sBPF binaries",
        "readme": "# Auger\n\nAn SRE toolkit for sBPF binaries. *This project is currently archived, and is both unfinished and infrequently worked on*\n\n## Overview\n\nAuger is an SRE (Software Reverse Engineering) tookit designed to analyze sBPF (Solana Extended Berkeley Packet Filter) binaries. This includes the ability to generate pseudo-code, and to identify information like the program's name, instructions, accounts, arguments, discriminators, libraries used, and more.\n\n## Features\n\n- **Pseudo-code:** Generate C or Rust-like pseudo-code for the program, automatically populated with common data types used in Solana programs\n- **Information Extraction:** Identify the program's name, instructions, accounts, arguments, discriminators, imports, linker version, and more.\n- **Automatic Pointer Resolution:** Pointers used in syscalls are automatically resolved to show relevant data, and make inferences about the program's structure and behavior.\n- **Syscall & Function Identification:** Identify Solana syscalls and common function signatures from the Rust Standard Library, Solana Program, Anchor, Borsh, and more.\n- **IDL Generation:** Generate an IDL (Interface Description Language) for Anchor programs.\n- **Emulation:** Run the program via\n\n## Installation\n\n```bash\ncargo install auger\n```\n\n## Usage\n\n### CLI\n\n```bash\n# Basic usage\nauger --f path/to/program.so\n\n# Output dir\nauger --file path/to/program.so --o results/\n\n# Customize extraction parameters\nauger --f path/to/program.so --s 16 -i 2\n\n# Use raw mode (don't replace non-printable characters)\nauger --f path/to/program.so --raw\n```\n\n### As a Library\n\n```rust\nuse auger::{extract_from_file, write_results, AugerConfig};\nuse std::path::Path;\n\nfn main() {\n    // Create a custom configuration\n    let config = AugerConfig {\n        ff_sequence_length: 8,\n        program_header_index: 1,\n        replace_non_printable: true,\n    };\n\n    // Extract text and instructions from a file\n    let result = extract_from_file(Path::new(\"path/to/program.so\"), Some(config)).unwrap();\n\n    // Print statistics\n    println!(\"Processed {} bytes\", result.stats.bytes_processed);\n    println!(\"Found {} instructions\", result.stats.instruction_count);\n\n    // Write results to files\n    write_results(&result, Path::new(\"output/\")).unwrap();\n}\n```\n\n## Notes\n\n- Memory layout is as follows:\n  - 0x100000000 for ELF sections\n  - 0x200000000 for the stack (extra section)\n  - 0x300000000 for the heap (extra section)\n      - Default length is 32kib, but this can be extended up to 262kib with `requestHeapFrame`\n  - 0x400000000 for the inputs (extra section)\n\n## Roadmap\n\n- [x] Detect alternative linker usage\n  - [x] Use custom parsers based on linker usage\n- [ ] Automatic memory layout handling for SVM\n  - [ ] 0x100000000 for ELF sections\n  - [ ] 0x200000000 for the stack (extra section)\n  - [ ] 0x300000000 for the heap (extra section)\n  - [ ] 0x400000000 for the inputs (extra section)\n- [ ] Infer instruction discriminators from extracted names\n- [ ] Find relevant data structures\n  - [ ] Associate field names and types\n- [ ] Extract account names associated with instructions\n  - [ ] Associate data structures with those account names (default to AccountInfo)\n    - [ ] Generate discriminators for each account\n- [ ] Construct a program IDL from the extracted information\n- [ ] Use fine-tuned DistilBERT to improve text pattern extraction\n  - [ ] Identify chunked data structure names (pascal)\n  - [ ] Catch missed matches in parsers for blobs of unspaced mixed casing\n\n## Sources\n\nThe following sources were used in some capacity during the making of this project. If you're interested in diving deeper, these are a great place to start:\n\n- [sbpf](https://github.com/anza-xyz/sbpf)\n- [ezbpf](https://github.com/deanmlittle/ezbpf)\n- [agave/bpf-loader](https://github.com/anza-xyz/agave/tree/9c2098450ca7e5271e3690277992fbc910be27d0/programs/bpf_loader)\n- [Executable and Linkable Format](https://en.wikipedia.org/wiki/Executable_and_Linkable_Format)\n- [The Solana eBPF Virtual Machine](https://www.anza.xyz/blog/the-solana-ebpf-virtual-machine)\n- [Reverse Engineering Solana](https://osec.io/blog/2022-08-27-reverse-engineering-solana)\n",
        "homepage": null,
        "language": "Rust",
        "stargazers_count": 1,
        "license": null,
        "topics": [],
        "created_at": "2025-03-14T00:02:09Z",
        "updated_at": "2025-05-26T14:06:44Z",
        "pushed_at": "2025-05-26T03:50:15Z",
        "readme_excerpt": "Auger An SRE toolkit for sBPF binaries. *This project is currently archived, and is both unfinished and infrequently worked on* Overview Auger is an SRE (Software Reverse Engineering) tookit designed to analyze sBPF (Solana Extended Berkeley Packet Filter) binaries. This includes the ability to generate pseudo-code, and to identify information like the program's name, instructions, accounts, arguments, discriminators, libraries used, and more. Features **Pseudo-code:** Generate C or Rust-like pseudo-code for the program, automatically populated with common data types used in Solana programs **Information Extraction:** Identify the program's name, instructions, accounts, arguments, discriminators, imports, linker version, and more. **Automatic Pointer Resolution:**"
      }
    },
    {
      "repo": {
        "name": "awesome-solana-oss",
        "id": 737435058,
        "full_name": "joeymeere/awesome-solana-oss",
        "description": "Compilation of awesome open-source Solana repositories on GitHub!",
        "readme": "# 🚀 Awesome Solana (Open-Source Edition)\n\n[![Awesome](https://i.imgur.com/fZVEgpL.png)](https://github.com/sindresorhus/awesome)\n\n_A curated compilation of awesome open-source Solana repositories on Github._\n\nThis repo is for:\n\n-   Discovering code to learn from\n-   Finding ecosystem projects to contribute to\n-   Getting a gauge of the Solana open-source ecosystem\n\nSubmit a PR if you have a suggested add! Repositories on this list must have a valid license (MIT, GPL 3.0, Apache 2.0, etc..).\n\n| Name                   | Team / Dev                                                                          | Category                              | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | ------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Stockpile Lite          | [Joey Meere](https://twitter.com/joeymeere)                                   | DeFi, Payments              | Yes                  | <a href=\"https://github.com/StockpileLabs/stockpile-lite\" target=\"_blank\">Stockpile Lite</a>                  |\n| Trusts Protocol          | [Joey Meere](https://twitter.com/joeymeere)                                    | DeFi, Payments              | Yes                  | <a href=\"https://github.com/joeymeere/trusts\" target=\"_blank\">Trusts Protocol</a>                  |\n| Squads v4           | [Squads](https://twitter.com/squadsprotocol)                                        | Infrastructure | Yes                  | <a href=\"https://github.com/Squads-Protocol/v4\" target=\"_blank\">Squads v4</a>                  |\n| Squads MPL             | [Squads](https://twitter.com/squadsprotocol)                                        | Infrastructure | Yes                  | <a href=\"https://github.com/Squads-Protocol/squads-mpl\" target=\"_blank\">Squads MPL</a>                  |\n| Backpack               | [Coral](https://twitter.com/xNFT_Backpack)                                          | Wallet, Infrastructure                | Yes                  | <a href=\"https://github.com/coral-xyz/backpack\" target=\"_blank\">Backpack</a>                          |\n| Solana Wallet Adapter  | [Solana Labs](https://twitter.com/solana)                                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/solana-labs/wallet-adapter\" target=\"_blank\">Solana Wallet Adapter</a>                  |\n| Anza Wallet Adapter    | [Anza](https://x.com/anza_xyz)                                                      | Dev Tooling                           | Yes                  | <a href=\"https://github.com/anza-xyz/wallet-adapter\" target=\"_blank\">Anza Wallet Adapter</a>                       |\n| Anchor                 | [Coral](https://twitter.com/xNFT_Backpack)                                          | Dev Tooling, Framework                | Yes                  | <a href=\"https://github.com/coral-xyz/anchor\" target=\"_blank\">Anchor</a>                            |\n| TinyDancer             | [TinyDancer](https://twitter.com/tinydancerio)                                      | Infrastructure                        | Yes                  | <a href=\"https://github.com/tinydancer-io/tinydancer\" target=\"_blank\">TinyDancer</a>                    |\n| Elusiv                 | [Elusiv](https://twitter.com/elusivprivacy)                                         | Privacy, Infrastructure               | Yes                  | <a href=\"https://github.com/elusiv-privacy/elusiv\" target=\"_blank\">Elusiv</a>                       |\n| Code Program Library   | [GetCode](https://twitter.com/getcode)                                              | Payments                              | Yes                  | <a href=\"https://github.com/code-payments/code-program-library\" target=\"_blank\">Code Program Library</a>          |\n| Code Android App       | [GetCode](https://twitter.com/getcode)                                              | Payments, Mobile                      | Yes                  | <a href=\"https://github.com/code-payments/code-android-app\" target=\"_blank\">Code Android App</a>              |\n| Bubblegum              | [Metaplex](https://twitter.com/metaplex)                                            | NFT, Dev Tooling                      | Yes                  | <a href=\"https://github.com/metaplex-foundation/mpl-bubblegum\" target=\"_blank\">Bubblegum</a>           |\n| Solana Playground      | [Solana Playground](https://github.com/solana-playground)                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/solana-playground/solana-playground\" target=\"_blank\">Solana Playground</a>         |\n| Openbook v2            | [Openbook](https://twitter.com/openbookdex)                                         | DeFi                                  | Yes                  | <a href=\"https://github.com/openbook-dex/openbook-v2\" target=\"_blank\">Openbook v2</a>                    |\n| Phoenix v1             | [Ellipsis Labs](https://twitter.com/ellipsis_labs)                                  | DeFi                                  | Yes                  | <a href=\"https://github.com/Ellipsis-Labs/phoenix-v1\" target=\"_blank\">Phoenix v1</a>                    |\n| Solend Programs        | [Solend](https://twitter.com/solendprotocol)                                        | DeFi                                  | Yes                  | <a href=\"https://github.com/solendprotocol/solana-program-library\" target=\"_blank\">Solend Programs</a>       |\n| Mango v4               | [Mango Markets](https://twitter.com/mangomarkets)                                   | DeFi                                  | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-v4\" target=\"_blank\">Mango v4</a>              |\n| Mango v4 UI            | [Mango Markets](https://twitter.com/mangomarkets)                                   | DeFi                                  | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-v4-ui\" target=\"_blank\">Mango v4 UI</a>           |\n| Mango Feeds            | [Mango Markets](https://twitter.com/mangomarkets)                                   | DeFi                                  | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-feeds\" target=\"_blank\">Mango Feeds</a>           |\n| Drift v2               | [Drift Protocol](https://x.com/DriftProtocol)                                       | DeFi                                  | Yes                  | <a href=\"https://github.com/drift-labs/protocol-v2\" target=\"_blank\">Drift v2</a>                      |\n| Drift Keeper Bots      | [Drift Protocol](https://x.com/DriftProtocol)                                       | DeFi                                  | Yes                  | <a href=\"https://github.com/drift-labs/keeper-bots-v2\" target=\"_blank\">Drift Keeper Bots</a>           |\n| Kamino Lend            | [Hubble Protocol](https://twitter.com/Kamino_Finance)                               | DeFi                                  | Yes                  | <a href=\"https://github.com/Kamino-Finance/klend\" target=\"_blank\">Kamino Lend</a>                     |\n| MarginFi v2            | [MrgnLabs](https://twitter.com/marginfi)                                            | DeFi                                  | Yes                  | <a href=\"https://github.com/mrgnlabs/marginfi-v2\" target=\"_blank\">MarginFi v2</a>                     |\n| Mrgn TS                | [MrgnLabs](https://twitter.com/marginfi)                                            | DeFi                                  | Yes                  | <a href=\"https://github.com/mrgnlabs/mrgn-ts\" target=\"_blank\">Mrgn TS</a>                             |\n| Raydium UI             | [Raydium](https://twitter.com/raydiumprotocol)                                      | DeFi                                  | Yes                  | <a href=\"https://github.com/raydium-io/raydium-frontend\" target=\"_blank\">Raydium UI</a>               |\n| Whirlpools CLMM        | [Orca_so](https://twitter.com/orca_so)                                              | DeFi                                  | Yes                  | <a href=\"https://github.com/orca-so/whirlpools\" target=\"_blank\">Whirlpools CLMM</a>                   |\n| Raydium CLMM           | [Raydium](https://twitter.com/RaydiumProtocol)                                      | DeFi                                  | Yes                  | <a href=\"https://github.com/raydium-io/raydium-clmm\" target=\"_blank\">Raydium CLMM</a>                 |\n| Saber                  | [Saber DAO](https://twitter.com/The_Saber_DAO)                                      | DeFi                                  | Yes                  | <a href=\"https://github.com/saber-hq/stable-swap\" target=\"_blank\">Saber</a>                            |\n| Jito Solana            | [Jito Labs](https://twitter.com/jito_sol)                                           | Infrastructure                        | Yes                  | <a href=\"https://github.com/jito-foundation/jito-solana\" target=\"_blank\">Jito Solana</a>              |\n| Jito Relayer           | [Jito Labs](https://twitter.com/jito_sol)                                           | Infrastructure                        | Yes                  | <a href=\"https://github.com/jito-foundation/jito-relayer\" target=\"_blank\">Jito Relayer</a>            |\n| PubKey Link            | [Beeman](https://twitter.com/beeman_nl)                                             | Discord Bot                           | Yes                  | <a href=\"https://github.com/pubkeyapp/pubkey-link\" target=\"_blank\">PubKey Link</a>                    |\n| PubKey Stack           | [Beeman](https://twitter.com/beeman_nl)                                             | Starter, Dev Tooling                  | Yes                  | <a href=\"https://github.com/pubkeyapp/pubkey-stack\" target=\"_blank\">PubKey Stack</a>                  |\n| Lighthouse             | [Jac0xb](https://twitter.com/jacobdotsol)                                           | Dev Tooling, Safety                   | Yes                  | <a href=\"https://github.com/Jac0xb/lighthouse\" target=\"_blank\">Lighthouse</a>                        |\n| Explorer Kit           | [SolanaFM](https://twitter.com/solanafm)                                            | Dev Tooling, Infrastructure           | Yes                  | <a href=\"https://github.com/solana-fm/explorer-kit\" target=\"_blank\">Explorer Kit</a>                  |\n| Distributor            | [Jito Labs](https://twitter.com/jito_sol)                                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/jito-foundation/distributor\" target=\"_blank\">Distributor</a>              |\n| Umi                    | [Metaplex](https://twitter.com/metaplex)                                            | Dev Tooling                           | Yes                  | <a href=\"https://github.com/metaplex-foundation/umi\" target=\"_blank\">Umi</a>                          |\n| Kinobi                 | [Metaplex](https://twitter.com/metaplex)                                            | Dev Tooling                           | Yes                  | <a href=\"https://github.com/metaplex-foundation/kinobi\" target=\"_blank\">Kinobi</a>                    |\n| Pyre                   | [Helius](https://twitter.com/heliuslabs)                                            | Education                             | Yes                  | <a href=\"https://github.com/helius-labs/pyre\" target=\"_blank\">Pyre</a>                                |\n| Xray                   | [Helius](https://twitter.com/heliuslabs)                                            | Explorer                              | Yes                  | <a href=\"https://github.com/helius-labs/xray\" target=\"_blank\">Xray</a>                                |\n| Solana Mobile Starter  | [Solend](https://twitter.com/solendprotocol)                                        | Starter                               | Yes                  | <a href=\"https://github.com/solendprotocol/solana-mobile-starter-kit\" target=\"_blank\">Solana Mobile Starter</a>    |\n| Shank                  | [Metaplex](https://twitter.com/metaplex)                                            | Dev Tooling                           | Yes                  | <a href=\"https://github.com/metaplex-foundation/shank\" target=\"_blank\">Shank</a>                      |\n| Solita                 | [Metaplex](https://twitter.com/metaplex)                                            | Dev Tooling                           | Yes                  | <a href=\"https://github.com/metaplex-foundation/solita\" target=\"_blank\">Solita</a>                    |\n| Blockbuster            | [Metaplex](https://twitter.com/metaplex)                                            | Infrastructure                        | Yes                  | <a href=\"https://github.com/metaplex-foundation/blockbuster\" target=\"_blank\">Blockbuster</a>          |\n| Lite RPC               | [Blockworks](https://twitter.com/blockworks_)                                       | Infrastructure                        | Yes                  | <a href=\"https://github.com/blockworks-foundation/lite-rpc\" target=\"_blank\">Lite RPC</a>               |\n| Squads CLI             | [Squads](https://twitter.com/squadsprotocol)                                        | Multisig, Dev Tooling                 | Yes                  | <a href=\"https://github.com/Squads-Protocol/squads-cli\" target=\"_blank\">Squads CLI</a>                |\n| AnchorPy               | [Kevin Heavey](https://twitter.com/metaplex)                                        | Dev Tooling                           | No                   | <a href=\"https://github.com/kevinheavey/anchorpy\" target=\"_blank\">AnchorPy</a>                        |\n| Inscription            | [Metaplex](https://twitter.com/metaplex)                                            | NFT, Dev Tooling                      | Yes                  | <a href=\"https://github.com/metaplex-foundation/mpl-inscription\" target=\"_blank\">Inscription</a>      |\n| BYO Mint               | [0xLarry](https://twitter.com/0xLarry8)                                             | NFT, Dev Tooling                      | Yes                  | <a href=\"https://github.com/0xlarry/byo_mint\" target=\"_blank\">BYO Mint</a>                            |\n| Metaboss               | [Metafrost](https://github.com/samuelvanderwaal/metaboss)                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/samuelvanderwaal/metaboss\" target=\"_blank\">Metaboss</a>                   |\n| Soda                   | [Web3 Builders Alliance](https://twitter.com/comebuidlwithus)                       | Dev Tooling, Infrastructure           | Yes                  | <a href=\"https://github.com/Web3-Builders-Alliance/soda\" target=\"_blank\">Soda</a>                     |\n| Sol4k                  | [Sasha Shpota](https://twitter.com/sashashpota)                                     | Dev Tooling                           | Yes                  | <a href=\"https://github.com/sol4k/sol4k\" target=\"_blank\">Sol4k</a>                                  |\n| Arsnal                 | [Anish De](https://twitter.com/anishde10)                                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/AnishDe12020/arsnal\" target=\"_blank\">Arsnal</a>                          |\n| Solnet                 | [Block Mountain](https://twitter.com/blockmountainio)                               | Dev Tooling                           | Yes                  | <a href=\"https://github.com/bmresearch/Solnet\" target=\"_blank\">Solnet</a>                            |\n| Solathon               | [SuperteamDAO](https://twitter.com/superteamdao)                                    | Dev Tooling                           | Yes                  | <a href=\"https://github.com/SuperteamDAO/solathon\" target=\"_blank\">Solathon</a>                      |\n| Skeet                  | [Skeet Dev](https://twitter.com/SkeetDev)                                           | Dev Tooling, Framework                | Yes                  | <a href=\"https://github.com/elsoul/skeet-cli\" target=\"_blank\">Skeet</a>                              |\n| solv                   | [Epics DAO](https://twitter.com/EpicsDAO2)                                          | Validator Tooling                     | Yes                  | <a href=\"https://github.com/EpicsDAO/solv\" target=\"_blank\">Epics DAO</a>                               |\n| Builderz dApp Scaffold | [Builderz](https://twitter.com/builderz__)                                          | Dev Tooling, Starter                  | Yes                  | <a href=\"https://github.com/builderz-labs/builderz-solana-dapp-scaffold\" target=\"_blank\">Builderz dApp Scaffold</a> |\n| Builderz xNFT Scaffold | [Builderz](https://twitter.com/builderz__)                                          | Dev Tooling, Starter                  | Yes                  | <a href=\"https://github.com/builderz-labs/builderz-xNFT-scaffold-next\" target=\"_blank\">Builderz xNFT Scaffold</a>   |\n| solv                   | [Epics DAO](https://twitter.com/EpicsDAO2)                                          | Validator Tooling                     | Yes                  | <a href=\"https://github.com/EpicsDAO/solv\" target=\"_blank\">Epics DAO</a>                               |\n| Solana Wallet Names    | [Portal Payments](https://twitter.com/portalpayments)                               | Dev Tooling, Domains                  | No                   | <a href=\"https://github.com/portalpayments/solana-wallet-names\" target=\"_blank\">Portal Payments</a>          |\n| Jet v2                 | [Jet Labs](https://twitter.com/jetprotocol)                                         | DeFi                                  | No                   | <a href=\"https://github.com/jet-lab/jet-v2\" target=\"_blank\">Jet v2</a>                              |\n| Jet v1                 | [Jet Labs](https://twitter.com/jetprotocol)                                         | DeFi                                  | No                   | <a href=\"https://github.com/jet-lab/jet-v1\" target=\"_blank\">Jet v1</a>                              |\n| Jet Governance         | [Jet Labs](https://twitter.com/jetprotocol)                                         | DeFi                                  | No                   | <a href=\"https://github.com/jet-lab/jet-governance\" target=\"_blank\">Jet Governance</a>                      |\n| Underdog SDK           | [Underdog](https://twitter.com/backanunderdog)                                      | NFT, Infrastructure                   | No                   | <a href=\"https://github.com/UnderdogProtocol/js\" target=\"_blank\">Underdog SDK</a>                         |\n| Solana Auth            | [Crossmint](https://twitter.com/crossmint)                                          | Authentication, Infrastructure        | No                   | <a href=\"https://github.com/Crossmint/solana-auth\" target=\"_blank\">Solana Auth</a>                       |\n| Nautilus               | [Buffalo Joe](https://twitter.com/realbuffalojoe)                                   | Dev Tooling, Framework                | No                   | <a href=\"https://github.com/nautilus-project/nautilus\" target=\"_blank\">Nautilus</a>                   |\n| Space Wrapper          | [Space Operator](https://twitter.com/_space_operator)                               | Authentication, Infrastructure        | No                   | <a href=\"https://github.com/space-operator/space-wrapper\" target=\"_blank\">Space Wrapper</a>                |\n| Spiral Safe            | [Spiral Safe](https://twitter.com/spiralsafe)                                       | Authentication, Infrastructure        | Yes                  | <a href=\"https://github.com/Spiral-Safe\" target=\"_blank\">Spiral Safe</a>                                 |\n| Designity Growth       | [Spiral Safe](https://twitter.com/DesignityCom)                                     | Performance review protocol           | Yes                  | <a href=\"https://github.com/designitycom/solana-contract\" target=\"_blank\">Designity Growth</a>                |\n| Create-Solana-Dapp     | [Solana Developers](https://twitter.com/solana_devs)                                | Dev Tooling                           | Yes                  | <a href=\"https://github.com/solana-developers/create-solana-dapp\" target=\"_blank\">Create-Solana-Dapp</a>        |\n| SOLfees.fyi            | [Ronny Haase](https://twitter.com/ronnyhaase)                                       | Wallet                                | Yes                  | <a href=\"https://github.com/ronnyhaase/solfees.fyi\" target=\"_blank\">SOLfees.fyi</a>                      |\n| Yellowstone gRPC       | [Triton One](https://triton.one)                                                    | RPC, DeFi                             | Yes                  | <a href=\"https://github.com/rpcpool\" target=\"_blank\">Yellowstone gRPC</a>                                     |\n| Stockpile v2           | [Joey Meere](https://twitter.com/joeymeere)                                    | DeFi, Payments              | Yes                  | <a href=\"https://github.com/StockpileLabs/stockpile-v2\" target=\"_blank\">Stockpile v2</a>                  |\n| Jito Stakenet          | [Jito Labs](https://twitter.com/jito_sol)                                           | DeFi                                  | Yes                  | <a href=\"https://github.com/jito-foundation/stakenet\" target=\"_blank\">Jito Stakenet</a>                    |\n| Light Protocol         | [Light Protocol](https://twitter.com/lightprotocol)                                      | Privacy, Infrastructure               | Yes                  | <a href=\"https://github.com/Lightprotocol/light-protocol\" target=\"_blank\">Light Protocol</a>                |\n| Step Reward Pool       | [Step Finance](https://twitter.com/StepFinance_)                                    | DeFi                                  | Yes                  | <a href=\"https://github.com/step-finance/step-staking\" target=\"_blank\">Step Reward Pool</a>                   |\n| Step Staking           | [Step Finance](https://twitter.com/StepFinance_)                                    | DeFi                                  | No                   | <a href=\"https://github.com/step-finance/reward-pool\" target=\"_blank\">Step Staking</a>                    |\n| McBurnJS               | [McDegensDAO](https://twitter.com/McDegensDAO)                                      | NFT                                   | Yes                  | <a href=\"https://github.com/McDegens-DAO/mcburn-js/\" target=\"_blank\">McBurnJS</a>                     |\n| cNFT Spam Filter       | [Solarnius](https://twitter.com/solarnius)                                          | NFT, Infrastructure                   | Yes                  | <a href=\"https://github.com/filtoor/cnft-spam-filter\" target=\"_blank\">cNFT Spam Filter</a>                    |\n| sol CLI Explorer       | [cavemanloverboy](https://github.com/cavemanloverboy)                               | Explorer                              | Yes                  | <a href=\"https://github.com/cavemanloverboy/sol\" target=\"_blank\">sol CLI Explorer</a>                         |\n| Turnkey Client         | [Eliascm17](https://github.com/Eliascm17)                                           | Dev Tooling                           | Yes                  | <a href=\"https://github.com/Eliascm17/turnkey\" target=\"_blank\">Turnkey Client</a>                           |\n| LiteSVM                | [Aursen](https://github.com/Aursen), [Kevin Heavey](https://github.com/kevinheavey) | Dev Tooling                           | Yes                  | <a href=\"https://github.com/LiteSVM/litesvm\" target=\"_blank\">LiteSVM</a>                             |\n| Mollusk                | [Joe Caufield](https://github.com/buffalojoec) | Dev Tooling                           | Yes                  | <a href=\"https://github.com/buffalojoec/mollusk\" target=\"_blank\">Mollusk</a>                             |\n| Zircon                 | [Joey Meere](https://github.com/joeymeere)                                          | Education                             | Yes                  | <a href=\"https://github.com/joeymeere/zircon\" target=\"_blank\">Zircon</a>                            |\n| Dreamcast              | [Joey Meere](https://github.com/joeymeere)                                          | Dev Tooling                           | Yes                  | <a href=\"https://github.com/joeymeere/dreamcast\" target=\"_blank\">Dreamcast</a>                         |\n| Jinbag                 | [shockz09](https://github.com/shockz09)                                             | Application                           | Yes                  | <a href=\"https://github.com/shockz09/Jinbag\" target=\"_blank\">Jinbag</a>                             |\n| marketplace contracts  | [SoundworkSounds](https://x.com/SoundworkSounds/)                                   | NFT, Consumer                         | Yes                  | <a href=\"https://github.com/SoundWorkLabs/marketplace-contracts\" target=\"_blank\">marketplace contracts</a>         |\n",
        "homepage": "",
        "language": null,
        "stargazers_count": 2,
        "license": null,
        "topics": [],
        "created_at": "2023-12-31T02:45:43Z",
        "updated_at": "2024-06-23T18:50:42Z",
        "pushed_at": "2024-06-23T17:33:18Z",
        "readme_excerpt": "🚀 Awesome Solana (Open-Source Edition) [![Awesome]( _A curated compilation of awesome open-source Solana repositories on Github._ This repo is for: Discovering code to learn from Finding ecosystem projects to contribute to Getting a gauge of the Solana open-source ecosystem Submit a PR if you have a suggested add! Repositories on this list must have a valid license (MIT, GPL 3.0, Apache 2.0, etc..)."
      }
    },
    {
      "repo": {
        "name": "clemson-blockchain-ui",
        "id": 589423546,
        "full_name": "joeymeere/clemson-blockchain-ui",
        "description": null,
        "readme": "This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.js`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.js`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n",
        "homepage": null,
        "language": "JavaScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2023-01-16T04:21:58Z",
        "updated_at": "2023-01-16T04:23:23Z",
        "pushed_at": "2023-01-27T04:27:41Z",
        "readme_excerpt": "This is a [Next.js]( project bootstrapped with [ ]( Getting Started First, run the development server: Open [ with your browser to see the result. You can start editing the page by modifying . The page auto-updates as you edit the file. [API routes]( can be accessed on [ This endpoint can be edited in . The directory is mapped to . Files in this directory are treated as [API routes]( instead of React pages. This project uses [ ]( to automatically optimize and load Inter, a custom Google Font. Learn More To learn more about Next.js, take a look"
      }
    },
    {
      "repo": {
        "name": "daemon",
        "id": 916428969,
        "full_name": "joeymeere/daemon",
        "description": "A TS Framework for AI Agents",
        "readme": "# Daemon 🕹\n\n![Daemon Banner](./images/daemon.png)\n\nDaemon is a lightweight, scalable, standards first framework for building AI agents. It is designed to be easy to understand, easy to use, and easy to extend. While the client is built in Typescript, the modules are designed to operate over JSON RPC and can be written in any language.\n\nDocs available at [Daemon Docs](https://daemon.spacemangaming.com)\n\n### Key Features\n\n- Scalable multi agent architecture where agents can _pool_ resources and keep the agents themselves extremely lightweight.\n- Standards based modules using [Model Context Protocol](https://modelcontextprotocol.io) that allow agents access to wide variety of tools and resources\n- Basic memory and personality management out of the box, with options to extend it further\n\n### Motivation\n\nExisting AI frameworks focus on building monolithic AI agents with packaged tools. This approach works for running a couple agents, but doesn't scale to hundreds or thousands of agents. When building Agents-as-a-Service model, a more scalable architecture is for lightweight agent clients that share access to tools and resources.\n\nLets take a simple example of wanting to run three agents that all connect to twitter. In a monolithic framework, each of those agents would run it's Twitter plugin (lets say a headless browser), quickly eating up all your resources and duplicating processing of often the same data. In a modular framework like Daemon, you can build _one_ Twitter tool that ingests data and provides actions and support any number of lightweight agents that connect to it and get scoped access to use it's resources.\n\nThis becomes specially apparent when you're thinking of launching products that can do Agents-as-a-Service, as you'll be needing to orchestrate hundreds or thousands of user agents.\n\nHaving modular tools by using JSON RPC as a communication method between them (as defined in the MCP spec), also opens up Tool developers to write their modules in whatever language/way they want, optimizing each tool to better serve it as Tool-as-a-Service. Daemon also lends itself of tool monetization really well, allowing tool developers to be able to charge for their Tool-as-a-Service, something you can't really do with monolithic frameworks.\n\nAnd since you can swap in modules, we can keep the base agent really simple, with just basic RAG for memory and identity and offload the rest to modular servers.\n\n## Quick Start with Chat\n\nYou'll need Docker (or better yet Orb Stack)\n\n```bash\ndocker compose up -d\n```\n\nThen navigate to http://localhost:5173 to get started with an example chat application.\n\n## Installing Packages\n\nTo get started, you can install the daemon package and start building your own agents.\n\n```bash\nbun add @spacemangaming/daemon @spacemangaming/mcp-servers\n```\n",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2025-01-14T04:28:33Z",
        "updated_at": "2025-02-20T06:39:03Z",
        "pushed_at": "2025-02-20T07:13:15Z",
        "readme_excerpt": "Daemon 🕹 ![Daemon Banner](./images/daemon.png) Daemon is a lightweight, scalable, standards first framework for building AI agents. It is designed to be easy to understand, easy to use, and easy to extend. While the client is built in Typescript, the modules are designed to operate over JSON RPC and can be written in any language. Docs available at [Daemon Docs]( Key Features Scalable multi agent architecture where agents can _pool_ resources and keep the agents themselves extremely lightweight. Standards based modules using [Model Context Protocol]( that allow agents access to wide variety of tools and resources Basic memory and personality management"
      }
    },
    {
      "repo": {
        "name": "Dashboard",
        "id": 525098875,
        "full_name": "joeymeere/Dashboard",
        "description": null,
        "readme": "# [NextJS Argon Dashboard](https://demos.creative-tim.com/nextjs-argon-dashboard?ref=njsad-github-readme) [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&logo=twitter)](https://twitter.com/home?status=NextJS%20Argon%20Dashboard%20is%20a%20Free%20NextJS%204,%20Bootstrap%204,%20React%20and%20Reactstrap%20Dashboard%20%E2%9D%A4%EF%B8%8F%0Ahttps%3A//demos.creative-tim.com/nextjs-argon-dashboard-%20%23react%20%23reactstrap%20%23nextjs%20%23argon%20%23argondesign%20%23reactdashboard%20%23argonreact%20%23reactdesign%20%23bootstrap%20%23uikit%20%23freebie%20%20via%20%40CreativeTim)\n\n\n ![version](https://img.shields.io/badge/version-1.1.0-blue.svg)  ![license](https://img.shields.io/badge/license-MIT-blue.svg) [![GitHub issues open](https://img.shields.io/github/issues/creativetimofficial/nextjs-argon-dashboard.svg?maxAge=2592000)](https://github.com/creativetimofficial/nextjs-argon-dashboard/issues?q=is%3Aopen+is%3Aissue) [![GitHub issues closed](https://img.shields.io/github/issues-closed-raw/creativetimofficial/argon-nextjs-argon-dashboard.svg?maxAge=2592000)](https://github.com/creativetimofficial/argon-nextjs-argon-dashboard/issues?q=is%3Aissue+is%3Aclosed) [![Join the chat at https://gitter.im/NIT-dgp/General](https://badges.gitter.im/NIT-dgp/General.svg)](https://gitter.im/creative-tim-general/Lobby) [![Chat](https://img.shields.io/badge/chat-on%20discord-7289da.svg)](https://discord.gg/E4aHAQy)\n\n\n![Product Image](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/nextjs-argon-dashboard/nextjs-argon-dashboard.jpg)\n\nStart your development with a Dashboard for [NextJS](https://nextjs.org/?ref=creativetim), [Bootstrap 4](https://getbootstrap.com/?ref=creativetim), [React](https://reactjs.org/?ref=creativetim) and [Reactstrap](https://reactstrap.github.io/?ref=creativetim). It is open source, free and it features many components that can help you create amazing websites.\n\n**Fully Coded Components**\n\nNextJS Argon Dashboard is built with over 100 individual components, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files.\nYou will save a lot of time going from prototyping to full-functional code, because all elements are implemented. This Dashboard is coming with pre-built examples, so the development process is seamless, switching from our pages to the real website is very easy to be done.\nEvery element has multiple states for colors, styles, hover, focus, that you can easily access and use.\n\n**Complex Documentation**\n\nEach element is well presented in a very complex documentation. You can read more about the idea behind this [dashboard here](https://www.creative-tim.com/learning-lab/nextjs/overview/argon-dashboard?ref=creativetim). You can check the [components here](https://www.creative-tim.com/learning-lab/nextjs/alerts/argon-dashboard?ref=creativetim) and the [foundation here](https://www.creative-tim.com/learning-lab/nextjs/colors/argon-dashboard?ref=creativetim).\n\n**Example Pages**\n\nIf you want to get inspiration or just show something directly to your clients, you can jump start your development with our pre-built example pages. You will be able to quickly set up the basic structure for your web project.\n\n\n## Table of Contents\n\n* [Versions](#versions)\n* [Demo](#demo)\n* [Quick Start](#quick-start)\n* [Documentation](#documentation)\n* [File Structure](#file-structure)\n* [Browser Support](#browser-support)\n* [Resources](#resources)\n* [Pro Versions](#pro-versions)\n* [Kit Versions](#kit-versions)\n* [Reporting Issues](#reporting-issues)\n* [Licensing](#licensing)\n* [Useful Links](#useful-links)\n\n\n## Versions\n\n\n[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/aspnet-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-asp-net?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/nodejs-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-nodejs?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-react?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/angular-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-angular?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-native-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-react-native?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/vue-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/vue-argon-dashboard?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/laravel_logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-laravel?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/bootstrap-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/bootstrap-vue-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/bootstrap-vue-argon-dashboard?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/icon-django.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-django?ref=njsad-github-readme)\n\n\n\n| NextJS | ASP.NET | NodeJS | React  | Angular  |\n| --- | --- | --- | --- | --- |\n| [![Argon Dashboard Asp.net](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/nextjs-argon-dashboard/nextjs-argon-dashboard.jpg)](https://www.creative-tim.com/product/nextjs-argon-dashboard) | [![Argon Dashboard Asp.net](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-aspnet/argon-dashboard-aspnet.jpg)](https://www.creative-tim.com/product/argon-dashboard-asp-net) | [![Argon Dashboard Nodejs](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-nodejs/argon-dashboard-nodejs.jpg)](https://www.creative-tim.com/product/argon-dashboard-nodejs) | [![Argon Dashboard React](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-react/argon-dashboard-react.jpg)](https://www.creative-tim.com/product/argon-dashboard-react) | [![Argon Dashboard Angular](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-angular/argon-dashboard-angular.jpg)](https://www.creative-tim.com/product/argon-dashboard-angular) |\n\n| React Native | VueJS | Laravel | Bootstrap  | BootstrapVue  | Django  |\n| --- | --- | --- | --- | --- | --- |\n| [![Argon React Native](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-react-native/arg-rn-thumbnail.jpg)](https://www.creative-tim.com/product/argon-react-native) | [![Vue Argon Dashboard](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/vue-argon-dashboard/vue-argon-dashboard.jpg)](https://www.creative-tim.com/product/vue-argon-dashboard) | [![Argon Dashboard Laravel](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-laravel/argon-dashboard-laravel.jpg)](https://www.creative-tim.com/product/argon-dashboard-laravel) | [![Argon Dashboard](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard/argon-dashboard.jpg)](https://www.creative-tim.com/product/argon-dashboard) | [![BootstrapVue Argon Dashboard](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/bootstrap-vue-argon-dashboard/bootstrap-vue-argon-dashboard.jpg)](https://www.creative-tim.com/product/bootstrap-vue-argon-dashboard) | [![Argon Dashboard Django](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-django/argon-dashboard-django.jpg)](https://www.creative-tim.com/product/argon-dashboard-django) |\n\n\n## Demo\n\n- [Start page](https://demos.creative-tim.com/nextjs-argon-dashboard/admin/dashboard)\n- [User profile page](https://demos.creative-tim.com/nextjs-argon-dashboard/admin/profile)\n- [Tables page ](https://demos.creative-tim.com/nextjs-argon-dashboard/admin/tables)\n- [Maps Page](https://demos.creative-tim.com/nextjs-argon-dashboard/admin/maps)\n- [Login page](https://demos.creative-tim.com/nextjs-argon-dashboard/auth/login)\n\n[View More](https://demos.creative-tim.com/nextjs-argon-dashboard/admin/dashboard).\n\n\n## Quick start\n\n- `npm i nextjs-argon-dashboard`\n- [Download from Github](https://github.com/creativetimofficial/nextjs-argon-dashboard/archive/master.zip).\n- [Download from Creative Tim](https://www.creative-tim.com/product/nextjs-argon-dashboard?ref=njsad-github-readme).\n- Install with [Bower](https://bower.io/?ref=creativetim): ```bower install nextjs-argon-dashboard```.\n- Clone the repo: `git clone https://github.com/creativetimofficial/nextjs-argon-dashboard.git`.\n\n\n## Documentation\nThe documentation for the Material Kit is hosted at our [website](https://www.creative-tim.com/learning-lab/nextjs/overview/argon-dashboard).\n\n\n## File Structure\nWithin the download you'll find the following directories and files:\n\n```\nNextJS Argon Dashboard\n.\n├── CHANGELOG.md\n├── ISSUE_TEMPLATE.md\n├── LICENSE.md\n├── README.md\n├── Documentation\n│   └── documentation.html\n├── assets\n│   ├── css\n│   │   ├── nextjs-argon-dashboard.css\n│   │   ├── nextjs-argon-dashboard.css.map\n│   │   └── nextjs-argon-dashboard.min.css\n│   ├── fonts\n│   ├── img\n│   │   ├── brand\n│   │   ├── icons\n│   │   │   └── common\n│   │   └── theme\n│   ├── plugins\n│   │   └── nucleo\n│   │       ├── css\n│   │       │   ├── nucleo-svg.css\n│   │       │   └── nucleo.css\n│   │       └── fonts\n│   └── scss\n│       ├── argon-dashboard\n│       │   ├── bootstrap\n│       │   │   ├── mixins\n│       │   │   └── utilities\n│       │   ├── custom\n│       │   │   ├── alerts\n│       │   │   ├── avatars\n│       │   │   ├── badges\n│       │   │   ├── buttons\n│       │   │   ├── cards\n│       │   │   ├── charts\n│       │   │   ├── close\n│       │   │   ├── custom-forms\n│       │   │   ├── dropdowns\n│       │   │   ├── footers\n│       │   │   ├── forms\n│       │   │   ├── headers\n│       │   │   ├── icons\n│       │   │   ├── list-groups\n│       │   │   ├── maps\n│       │   │   ├── masks\n│       │   │   ├── mixins\n│       │   │   ├── modals\n│       │   │   ├── navbars\n│       │   │   ├── navs\n│       │   │   ├── paginations\n│       │   │   ├── popovers\n│       │   │   ├── progresses\n│       │   │   ├── separators\n│       │   │   ├── tables\n│       │   │   ├── type\n│       │   │   ├── utilities\n│       │   │   └── vendors\n│       │   └── docs\n│       ├── nextjs-argon-dashboard.scss\n│       └── react\n│           ├── bootstrap\n│           ├── plugins\n│           └── react-differences.scss\n├── components\n│   ├── Footers\n│   │   ├── AdminFooter.js\n│   │   └── AuthFooter.js\n│   ├── Headers\n│   │   ├── Header.js\n│   │   └── UserHeader.js\n│   ├── Navbars\n│   │   ├── AdminNavbar.js\n│   │   └── AuthNavbar.js\n│   ├── PageChange\n│   │   └── PageChange.js\n│   └── Sidebar\n│       └── Sidebar.js\n├── layouts\n│   ├── Admin.js\n│   └── Auth.js\n├── pages\n│   ├── 404.js\n│   ├── _app.js\n│   ├── _document.js\n│   ├── _error.js\n│   ├── admin\n│   │   ├── dashboard.js\n│   │   ├── icons.js\n│   │   ├── maps.js\n│   │   ├── profile.js\n│   │   └── tables.js\n│   ├── auth\n│   │   ├── login.js\n│   │   └── register.js\n│   └── index.js\n├── variables\n│   └── charts.js\n├── routes.js\n├── next.config.js\n└── package.json\n\n```\n\n\n## Browser Support\n\nAt present, we officially aim to support the last two versions of the following browsers:\n\n<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/chrome-logo.png?raw=true\" width=\"64\" height=\"64\"> <img src=\"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/logos/firefox-logo.png\" width=\"64\" height=\"64\"> <img src=\"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/logos/edge-logo.png\" width=\"64\" height=\"64\"> <img src=\"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/logos/safari-logo.png\" width=\"64\" height=\"64\"> <img src=\"https://raw.githubusercontent.com/creativetimofficial/public-assets/master/logos/opera-logo.png\" width=\"64\" height=\"64\">\n\n\n\n## Resources\n- Demo: <https://demos.creative-tim.com/nextjs-argon-dashboard/admin/dashboard?ref=njsad-github-readme>\n- Download Page: <https://www.creative-tim.com/product/nextjs-argon-dashboard?ref=njsad-github-readme>\n- Documentation: <https://www.creative-tim.com/learning-lab/nextjs/overview/argon-dashboard?ref=njsad-github-readme>\n- License Agreement: <https://www.creative-tim.com/license?ref=njsad-github-readme>\n- Support: <https://www.creative-tim.com/contact-us?ref=njsad-github-readme>\n- Issues: [Github Issues Page](https://github.com/creativetimofficial/nextjs-argon-dashboard/issues?ref=creativetim)\n\n### PRO Versions\n\n[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/nextjs.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/nextjs-argon-dashboard-pro?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/nodejs-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro-nodejs?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro-react?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/angular-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro-angular?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-native-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-pro-react-native?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/vue-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/vue-argon-dashboard-pro?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/laravel_logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro-laravel?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/bootstrap-logo.png?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/bootstrap-vue-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/bootstrap-vue-argon-dashboard-pro?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/nuxt.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/nuxt-argon-dashboard-pro?ref=njsad-github-readme)[<img style=\"background:white\" src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/svelte.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-dashboard-pro-svelte?ref=njsad-github-readme)\n\n\n\n| NextJS | NodeJS | React  | Angular  | VueJS |\n| --- | --- | --- | --- | --- |\n| [![NextJS Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/nextjs-argon-dashboard-pro/nextjs-argon-dashboard-pro.jpg)](https://www.creative-tim.com/product/nextjs-argon-dashboard-pro) | [![Argon Dashboard PRO Nodejs](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro-nodejs/argon-dashboard-pro-nodejs.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro-nodejs) | [![Argon Dashboard PRO React](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro-react/argon-dashboard-pro-react.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro-react) | [![Argon Dashboard PRO Angular](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro-angular/opt_adp_angular_thumbnail.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro-angular) | [![Vue Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/vue-argon-dashboard-pro/vue-argon-dashboard-pro.jpg)](https://www.creative-tim.com/product/vue-argon-dashboard-pro) |\n\n| React Native | Laravel | Bootstrap  | BootstrapVue  | Nuxt  | Svelte  |\n| --- | --- | --- | --- | --- | --- |\n| [![Argon PRO React Native](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-pro-react-native/argp-rn-thumbnail.jpg)](https://www.creative-tim.com/product/argon-pro-react-native) | [![Argon Dashboard PRO Laravel](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro-laravel/argon-dashboard-pro-laravel.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro-laravel) | [![Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro/argon-dashboard-pro.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro) | [![BootstrapVue Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/bootstrap-vue-argon-dashboard-pro/opt_badp_thumbnail.jpg)](https://www.creative-tim.com/product/bootstrap-vue-argon-dashboard-pro) | [![Nuxt Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/nuxt-argon-dashboard-pro/nuxt-argon-dashboard-pro.jpg)](https://www.creative-tim.com/product/nuxt-argon-dashboard-pro) | [![Nuxt Argon Dashboard PRO](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/argon-dashboard-pro-svelte/argon-dashboard-pro-svelte.jpg)](https://www.creative-tim.com/product/argon-dashboard-pro-svelte) |\n\n### Kit Versions\n\n#### FREE Kit Versions\n\n[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/html-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/angular-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system-angular?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system-react?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/vue-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/vue-argon-design-system?ref=njsad-github-readme)\n\n| HTML | Angular | React  | VueJS  |\n| --- | --- | --- | --- |\n| [![Argon Design System PRO HTML](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system/argon-design-system.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system?ref=njsad-github-readme)  | [![Argon Design System PRO Angular](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system-angular/argon-design-system-angular.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system-angular?ref=njsad-github-readme)  | [![Argon Design System PRO React](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system-react/argon-design-system-react.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system-react?ref=njsad-github-readme)  | [![Argon Design System PRO React](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/vue-argon-design-system/vue-argon-design-system.jpg)](https://www.creative-tim.com/product/vue-argon-design-system?ref=njsad-github-readme)|\n\n#### PRO Kit Versions\n\n[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/html-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system-pro?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/angular-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system-pro-angular?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/react-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/argon-design-system-pro-react?ref=njsad-github-readme)[<img src=\"https://github.com/creativetimofficial/public-assets/blob/master/logos/vue-logo.jpg?raw=true\" width=\"60\" height=\"60\" />](https://www.creative-tim.com/product/vue-argon-design-system-pro?ref=njsad-github-readme)\n\n| HTML | Angular | React  | VueJS  |\n| --- | --- | --- | --- |\n| [![Argon Design System PRO HTML](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system-pro/argon-design-system-pro.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system-pro?ref=njsad-github-readme)  | [![Argon Design System PRO Angular](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system-pro-angular/argon-design-system-pro-angular.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system-pro-angular?ref=njsad-github-readme)  | [![Argon Design System PRO React](https://github.com/creativetimofficial/public-assets/blob/master/argon-design-system-pro-react/argon-design-system-pro-react.jpg?raw=true)](https://www.creative-tim.com/product/argon-design-system-pro-react?ref=njsad-github-readme)  | [![Argon Design System PRO React](https://raw.githubusercontent.com/creativetimofficial/public-assets/master/vue-argon-design-system-pro/opt_adsp_vue_thumbnail.jpg)](https://www.creative-tim.com/product/vue-argon-design-system-pro?ref=njsad-github-readme)|\n\n## Reporting Issues\n\nWe use GitHub Issues as the official bug tracker for the Material Kit. Here are some advices for our users that want to report an issue:\n\n1. Make sure that you are using the latest version of the Material Kit. Check the CHANGELOG from your dashboard on our [website](https://www.creative-tim.com/?ref=njsad-github-readme).\n2. Providing us reproducible steps for the issue will shorten the time it takes for it to be fixed.\n3. Some issues may be browser specific, so specifying in what browser you encountered the issue might help.\n\n## Licensing\n\n- Copyright 2021 Creative Tim (https://www.creative-tim.com/?ref=njsad-github-readme)\n\n- Licensed under MIT (https://github.com/creativetimofficial/nextjs-argon-dashboard/blob/master/LICENSE.md?ref=creativetim)\n\n## Useful Links\n\n- [Tutorials](https://www.youtube.com/channel/UCVyTG4sCw-rOvB9oHkzZD1w?ref=creativetim)\n- [Affiliate Program](https://www.creative-tim.com/affiliates/new?ref=njsad-github-readme) (earn money)\n- [Blog Creative Tim](http://blog.creative-tim.com/?ref=njsad-github-readme)\n- [Free Products](https://www.creative-tim.com/bootstrap-themes/free?ref=njsad-github-readme) from Creative Tim\n- [Premium Products](https://www.creative-tim.com/bootstrap-themes/premium?ref=njsad-github-readme) from Creative Tim\n- [React Products](https://www.creative-tim.com/bootstrap-themes/react-themes?ref=njsad-github-readme) from Creative Tim\n- [Angular Products](https://www.creative-tim.com/bootstrap-themes/angular-themes?ref=njsad-github-readme) from Creative Tim\n- [VueJS Products](https://www.creative-tim.com/bootstrap-themes/vuejs-themes?ref=njsad-github-readme) from Creative Tim\n- [More products](https://www.creative-tim.com/bootstrap-themes?ref=njsad-github-readme) from Creative Tim\n- Check our Bundles [here](https://www.creative-tim.com/bundles?ref=njsad-github-readme)\n\n### Social Media\n\nTwitter: <https://twitter.com/CreativeTim?ref=creativetim>\n\nFacebook: <https://www.facebook.com/CreativeTim?ref=creativetim>\n\nDribbble: <https://dribbble.com/creativetim?ref=creativetim>\n\nInstagram: <https://www.instagram.com/CreativeTimOfficial?ref=creativetim>\n",
        "homepage": null,
        "language": "CSS",
        "stargazers_count": 0,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2022-08-15T18:38:35Z",
        "updated_at": "2022-08-15T18:40:49Z",
        "pushed_at": "2022-08-15T18:40:45Z",
        "readme_excerpt": "[NextJS Argon Dashboard]( [![Tweet]( ![version]( ![license]( [![GitHub issues open]( [![GitHub issues closed]( [![Join the chat at [![Chat]( ![Product Image]( Start your development with a Dashboard for [NextJS]( [Bootstrap 4]( [React]( and [Reactstrap]( It is open source, free and it features many components that can help you create amazing websites. **Fully Coded Components** NextJS Argon Dashboard is built with over 100 individual components, giving you the freedom of choosing and combining. All components can take variations in color, that you can easily modify using SASS files. You will save a lot of time going from prototyping to full-functional code, because all"
      }
    },
    {
      "repo": {
        "name": "dreamcast",
        "id": 792450136,
        "full_name": "joeymeere/dreamcast",
        "description": "Fetch & interact with Anchor programs in minutes",
        "readme": "<img src=\"https://firebasestorage.googleapis.com/v0/b/zircon-ac0b5.appspot.com/o/dreamcast.png?alt=media&token=35156d61-e316-4aa1-9c82-1b9f532199bd\">\n<div align=\"center\">\n  <img src=\"https://badgen.net/badge/version/1.1.0/blue\">\n  <img src=\"https://badgen.net/badge/contributions/open/blue\">\n</div>\n<h1 align=\"center\">Dreamcast</h1>\n<div align=\"center\">\n  <h3>Fetching and interacting with Anchor IDLs made quicker and easier.</h3>\n</div>\n\n## Who Is This For?\nDreamcast is for both novice and expert developers who are looking to interact with programs that lack a Typescript SDK, but have a published IDL account on-chain.\n\nAdditionally, this library is suitable for those who have an IDL file for a custom program they are interacting with, but want a concise and reusable method for creating their provider and program instances.\n\n## Installation\nYou can install Dreamcast with npm using the following command:\n```\nnpm i @joeymeere/dreamcast\n```\nAdditionally, you can load the source code via unpkg:\n```\nhttps://unpkg.com/@joeymeere/dreamcast@latest\n```\n\n## Usage\n\n**Fetching IDLs**\n```\n// create a connection (web3.js)\nconst connection = new Connection(\"<rpc url>\");\nconst programId = \"STKUaKniasuqrfer3XNbmrrc578pkL1XACdK8H3YPu8\";\n\n// returns formatted IDL object\nconst idl = await getIDL(connection, programId); \n```\n\n## Use with Next.js\nIf you're using this package with Next.js, you'll need to add some extra lines to your next.config.js to ensure IDLs are correctly loaded. \n\n```\ntranspilePackages: ['@joeymeere/dreamcast'],\nwebpack: (config) => {\n    config.resolve.extensionAlias = {\n        \".js\": [\".ts\", \".tsx\", \".js\", \".jsx\"],\n        \".mjs\": [\".mts\", \".mjs\"],\n        \".cjs\": [\".cts\", \".cjs\"],\n    };\n  return config;\n},\n```\n",
        "homepage": "",
        "language": "TypeScript",
        "stargazers_count": 29,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [
          "anchor",
          "solana"
        ],
        "created_at": "2024-04-26T17:35:54Z",
        "updated_at": "2025-07-03T12:12:12Z",
        "pushed_at": "2024-05-15T18:25:25Z",
        "readme_excerpt": "Dreamcast Fetching and interacting with Anchor IDLs made quicker and easier. Who Is This For? Dreamcast is for both novice and expert developers who are looking to interact with programs that lack a Typescript SDK, but have a published IDL account on-chain. Additionally, this library is suitable for those who have an IDL file for a custom program they are interacting with, but want a concise and reusable method for creating their provider and program instances. Installation You can install Dreamcast with npm using the following command: Additionally, you can load the source code via unpkg: Usage **Fetching IDLs** Use"
      }
    },
    {
      "repo": {
        "name": "emcp",
        "id": 941374358,
        "full_name": "joeymeere/emcp",
        "description": "A framework for building simple MCP servers with custom middleware",
        "readme": "# eMCP\n\n<div>\n  <img src=\"https://badgen.net/badge/version/1.0.1/orange\">\n  <a href=\"https://www.npmjs.com/package/emcp\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/emcp\">\n  </a>\n</div>\n<br>\n\nA fork of the [LiteMCP](https://github.com/wong2/litemcp) TS library with extended features like built-in authentication handling, and custom middleware.\n\n## Features\n\nThis is designed to be a near drop-in replacement for tools like LiteMCP. Because of this, all added features are currently optional.\n\n- All current LiteMCP features\n- Built-in authentication handler\n- Custom layered middleware support\n\n## Quickstart\n\nInstall via Bun or NPM:\n\n```bash\nnpm i emcp\n# or use Bun (preferred)\nbun add emcp\n```\n\n### Basic Usage\n\n(Optional) Run the examples:\n\n```bash\nbun run example:basic\nbun run example:auth\nbun run example:middleware\nbun run example:advanced\n```\n\n```ts\nconst server = new eMCP(\"mcp-server-with-auth\", \"1.0.0\", {\n  authenticationHandler: async (request) => {\n    // implement your custom auth logic here\n    return true;\n  },\n});\n\n// Request to this tool, or any other resource or prompt will\n// require authentication governed by the handler\nserver.addTool({\n  name: \"add\",\n  description: \"Add two numbers\",\n  parameters: z.object({\n    a: z.number(),\n    b: z.number(),\n  }),\n  execute: async (args) => {\n    server.logger.debug(\"Adding two numbers\", args);\n    return args.a + args.b;\n  },\n});\n```\n\n### Custom Middleware\n\n```ts\nconst server = new eMCP(\"mcp-server-with-middleware\", \"1.0.0\", {\n  authenticationHandler: async (request) => {\n    // implement your custom auth logic here\n    return true;\n  },\n});\n\n// This will time entire req -> res cycle, including middlewares\nserver.use(async (request, next) => {\n  const startTime = Date.now();\n  server.logger.debug(\"Request started\", { method: request.method });\n\n  // Wait for all inner middleware and the handler to complete\n  const response = await next();\n\n  const endTime = Date.now();\n  server.logger.debug(\"Request completed\", {\n    method: request.method,\n    duration: `${endTime - startTime}ms`,\n  });\n\n  return response;\n});\n```\n\n## How Middleware Works\n\nMiddleware in eMCP runs in order of registration. Once every middleware handler has hit it's `next()` block, then the standard MCP procedure will occur. Once the server is finished processing, then the order will run in reverse for middleware handlers with code after the `next()` block.\n\nTo put it simply, it looks something like this:\n\n```\n<---- Request received ----\n1. Middleware 1\n2. Middleware 2\n<---- Pre-processing done ---->\n4. Server handler\n<---- Post-processing start ---->\n5. Middleware 2\n6. Middleware 1\n---- Response sent ---->\n```\n\nIf you're familiar with frameworks like Hono, then this will be familiar to you.\n\n## Roadmap\n\n- Ergonomic MCP<->MCP communication\n- Integration into frameworks\n\n## Why?\n\nBecause I felt like it\n",
        "homepage": "",
        "language": "TypeScript",
        "stargazers_count": 11,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [
          "mcp",
          "model-context-protocol"
        ],
        "created_at": "2025-03-02T06:05:00Z",
        "updated_at": "2025-07-27T17:16:52Z",
        "pushed_at": "2025-03-09T00:02:41Z",
        "readme_excerpt": "eMCP A fork of the [LiteMCP]( TS library with extended features like built-in authentication handling, and custom middleware. Features This is designed to be a near drop-in replacement for tools like LiteMCP. Because of this, all added features are currently optional. All current LiteMCP features Built-in authentication handler Custom layered middleware support Quickstart Install via Bun or NPM: Basic Usage (Optional) Run the examples: Custom Middleware How Middleware Works Middleware in eMCP runs in order of registration. Once every middleware handler has hit it's block, then the standard MCP procedure will occur. Once the server is finished processing, then the"
      }
    },
    {
      "repo": {
        "name": "jaguar",
        "id": 990296496,
        "full_name": "joeymeere/jaguar",
        "description": "Fast, efficient binary serialization for resource-constrained environments.",
        "readme": "# Jaguar\n\nA lightweight binary serialization library designed for high-performance operations in resource-constrained environments like sBPF programs and embedded systems.\n\n## Installation\n\nRun:\n\n```bash\ncargo add jaguar\n```\n\nOr add to your `Cargo.toml`:\n\n```toml\n[dependencies]\njaguar = \"1.0.0\"\n```\n\n## Usage\n\nWith primitive types:\n\n```rust\nuse jaguar::{JaguarSerializer, JaguarDeserializer};\n\nlet pubkey = [1u8; 32];\n\nlet mut ser = JaguarSerializer::new();\npubkey.serialize(&mut ser).unwrap();\nlet data = ser.finish();\n\nlet mut de = JaguarDeserializer::new(&data);\nlet decoded = <[u8; 32]>::deserialize(&mut de).unwrap();\n```\n\nWith custom data structures:\n\n```rust\nuse jaguar::{JaguarSerialize, JaguarDeserialize, JaguarSerializer, JaguarDeserializer};\n\n#[derive(JaguarSerialize, JaguarDeserialize)]\nstruct MyData {\n    authority: [u8; 32],\n    amount: u64,\n    bump: u8,\n}\n\nlet mut ser = JaguarSerializer::new();\nlet instance = MyData { /* struct field values */ }.serialize(&mut ser).unwrap();\n\nlet mut de = JaguarDeserializer::new(&instance);\nlet value = MyData::deserialize(&de).unwrap();\n```\n\n## Supported Types\n\n- Primitive integers (u8/i8, u16/i16, u64/i64, etc...)\n- Booleans\n- Floats (f32, f64)\n- Strings and byte slices\n- Arrays and vectors of supported types\n- Custom structs\n- Enums\n\n## Performance\n\nBenchmarks on an M1 Mac Pro:\n\n### Serialization\n\n- `SimpleStruct`: ~60.04ns\n- `ComplexStruct`: ~1.121µs\n- `Vec<SimpleStruct>`: ~46.12µs\n- `Vec<u8>`: ~348.49ns,\n- `Vec<i8>`: ~19.31µs\n- `Vec<u16>`: ~22.01µs\n- `Vec<i16>`: ~20.50µs\n- `Vec<u64>`: ~22.14µs\n- `Vec<i64>`: ~20.55µs\n- `Vec<bool>`: ~4.07µs\n\n### Deserialization\n\n- `SimpleStruct`: ~46.7ns\n- `ComplexStruct`: ~1.153µs\n- `Vec<SimpleStruct>`: ~39.4µs\n- `Vec<u8>`: ~171ns,\n- `Vec<i8>`: ~11.36µs\n- `Vec<u16>`: ~9.71µs\n- `Vec<i16>`: ~12.09µs\n- `Vec<u64>`: ~9.82µs\n- `Vec<i64>`: ~11.92µs\n- `Vec<bool>`: ~4.07µs\n\n## Contributing\n\nContributions are welcome! Please read the [Contributing Guide](CONTRIBUTING.md) for details on the process for submitting pull requests.\n\n## License\n\nThis project is MIT licensed - see [LICENSE](LICENSE) for details.\n",
        "homepage": "https://crates.io/crates/jaguar",
        "language": "Rust",
        "stargazers_count": 7,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [
          "deserialization",
          "serialization",
          "solana"
        ],
        "created_at": "2025-05-25T22:24:54Z",
        "updated_at": "2025-06-02T08:09:11Z",
        "pushed_at": "2025-05-25T22:53:06Z",
        "readme_excerpt": "Jaguar A lightweight binary serialization library designed for high-performance operations in resource-constrained environments like sBPF programs and embedded systems. Installation Run: Or add to your : Usage With primitive types: With custom data structures: Supported Types Primitive integers (u8/i8, u16/i16, u64/i64, etc...) Booleans Floats (f32, f64) Strings and byte slices Arrays and vectors of supported types Custom structs Enums Performance Benchmarks on an M1 Mac Pro: Serialization : ~60.04ns : ~1.121µs : ~46.12µs : ~348.49ns, : ~19.31µs : ~22.01µs : ~20.50µs : ~22.14µs : ~20.55µs : ~4.07µs Deserialization : ~46.7ns : ~1.153µs : ~39.4µs : ~171ns, : ~11.36µs : ~9.71µs"
      }
    },
    {
      "repo": {
        "name": "MobiusProtocolFE",
        "id": 519058672,
        "full_name": "joeymeere/MobiusProtocolFE",
        "description": "Frontend for Mobius",
        "readme": "# Next.js + Tailwind CSS Example\n\nThis example shows how to use [Tailwind CSS](https://tailwindcss.com/) [(v3.0)](https://tailwindcss.com/blog/tailwindcss-v3) with Next.js. It follows the steps outlined in the official [Tailwind docs](https://tailwindcss.com/docs/guides/nextjs).\n\n## Deploy your own\n\nDeploy the example using [Vercel](https://vercel.com?utm_source=github&utm_medium=readme&utm_campaign=next-example) or preview live with [StackBlitz](https://stackblitz.com/github/vercel/next.js/tree/canary/examples/with-tailwindcss)\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https://github.com/vercel/next.js/tree/canary/examples/with-tailwindcss&project-name=with-tailwindcss&repository-name=with-tailwindcss)\n\n## How to use\n\nExecute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init), [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/), or [pnpm](https://pnpm.io) to bootstrap the example:\n\n```bash\nnpx create-next-app --example with-tailwindcss with-tailwindcss-app\n```\n\n```bash\nyarn create next-app --example with-tailwindcss with-tailwindcss-app\n```\n\n```bash\npnpm create next-app --example with-tailwindcss with-tailwindcss-app\n```\n\nDeploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).\n",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2022-07-29T02:47:57Z",
        "updated_at": "2023-06-30T01:20:54Z",
        "pushed_at": "2022-08-17T06:19:59Z",
        "readme_excerpt": "Next.js + Tailwind CSS Example This example shows how to use [Tailwind CSS]( [(v3.0)]( with Next.js. It follows the steps outlined in the official [Tailwind docs]( Deploy your own Deploy the example using [Vercel]( or preview live with [StackBlitz]( [![Deploy with Vercel]( How to use Execute [ ]( with [npm]( [Yarn]( or [pnpm]( to bootstrap the example: Deploy it to the cloud with [Vercel]( ([Documentation]("
      }
    },
    {
      "repo": {
        "name": "MobiusProtocolPL",
        "id": 505585930,
        "full_name": "joeymeere/MobiusProtocolPL",
        "description": null,
        "readme": "no readme",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2022-06-20T20:18:00Z",
        "updated_at": "2022-12-25T00:57:50Z",
        "pushed_at": "2022-09-06T13:09:28Z",
        "readme_excerpt": "no readme"
      }
    },
    {
      "repo": {
        "name": "munchies-on-the-move",
        "id": 626719797,
        "full_name": "joeymeere/munchies-on-the-move",
        "description": "Random landing page for a class project",
        "readme": "# Munchies on the Move\nThis project was built for a project in the ELE 4010 class at Clemson University. The object was to formulate an idea for a business, flesh out the idea, and make it into a reality in about 6 weeks. The goal is to make $2500 in profit from this venture.\n\n## What is MOTM?\nMunchies on the Move is a food-stand that appears at a random time of day, week and place on campus. We funnel people to the landing page to sign up, and recieve SMS alert as to our location. Additionally, users can also track our current and previous locations on the website. \n",
        "homepage": "https://munchies-on-the-move.vercel.app",
        "language": "JavaScript",
        "stargazers_count": 0,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2023-04-12T03:02:25Z",
        "updated_at": "2023-04-12T19:40:43Z",
        "pushed_at": "2023-04-16T22:43:18Z",
        "readme_excerpt": "Munchies on the Move This project was built for a project in the ELE 4010 class at Clemson University. The object was to formulate an idea for a business, flesh out the idea, and make it into a reality in about 6 weeks. The goal is to make $2500 in profit from this venture. What is MOTM? Munchies on the Move is a food-stand that appears at a random time of day, week and place on campus. We funnel people to the landing page to sign up, and recieve SMS alert as to our location. Additionally, users can also track"
      }
    },
    {
      "repo": {
        "name": "nautilus",
        "id": 632221064,
        "full_name": "joeymeere/nautilus",
        "description": "SQL-native Solana program framework",
        "readme": "# Nautilus\n[![Rust](https://github.com/nautilus-project/nautilus/actions/workflows/rust.yml/badge.svg)](https://github.com/nautilus-project/nautilus/actions/workflows/rust.yml)\n[![TypeScript](https://github.com/nautilus-project/nautilus/actions/workflows/typescript.yml/badge.svg)](https://github.com/nautilus-project/nautilus/actions/workflows/typescript.yml)\n[![Python](https://github.com/nautilus-project/nautilus/actions/workflows/python.yml/badge.svg)](https://github.com/nautilus-project/nautilus/actions/workflows/python.yml)\n\n<p width=\"full\" margin=\"auto\" align=\"center\" style = \"background:gray\"><img src=\"https://raw.githubusercontent.com/nautilus-project/nautilus/main/docs/public/nautilus-icon.jpg\" alt=\"youtube\" width=\"200\" margin=\"auto\" align=\"center\" bg=\"white\"/></p>\n\n**Snippets from Tests:**\n```rust\nuse nautilus::*;\n\n#[nautilus]\npub mod my_program {\n\n    fn create<'a>(mut new_wallet: Create<'a, Wallet<'a>>) -> ProgramResult {\n        new_wallet.create()\n    }\n\n    fn transfer<'a>(from: Signer<Wallet<'a>>, to: Mut<Wallet<'a>>, amount: u64) -> ProgramResult {\n        from.transfer_lamports(to.clone(), amount)\n    }\n\n    fn create_token<'a>(\n        mut new_token: Create<'a, Token<'a>>,\n        decimals: u8,\n        title: String,\n        symbol: String,\n        uri: String,\n        mint_authority: Signer<Wallet<'a>>,\n    ) -> ProgramResult {\n        new_token.create(\n            decimals,\n            title,\n            symbol,\n            uri,\n            mint_authority.clone(),\n            mint_authority.clone(),\n            Some(mint_authority),\n        )\n    }\n\n    fn create_person<'a>(\n        mut new_person: Create<'a, Record<'a, Person>>,\n        name: String,\n        authority: Pubkey,\n    ) -> ProgramResult {\n        new_person.create(name, authority)\n    }\n\n    fn create_home<'a>(\n        mut new_home: Create<'a, Account<'a, Home>>,\n        house_number: u8,\n        street: String,\n        some_pubkey: Pubkey,\n    ) -> ProgramResult {\n        new_home.create(house_number, street, (some_pubkey,)) // Seed parameter required\n    }\n}\n\n#[derive(Table)]\nstruct Person {\n    #[primary_key(autoincrement = true)]\n    id: u8,\n    name: String,\n    #[authority]\n    authority: Pubkey,\n}\n\n#[derive(State)]\n#[seeds(\n    \"home\",                 // Literal seed\n    some_pubkey: Pubkey,    // Parameter seed\n)]\nstruct Home {\n    house_number: u8,\n    street: String,\n}\n```\n\n### ⚡️ Rust-Analyzer Friendly!\n\n![](docs/imgs/non_mut_ss.png)\n![](docs/imgs/non_mut_analyzer_ss.png)\n\n\n**More Snippets from Tests:**\n```rust\nuse nautilus::*;\n\n#[nautilus]\nmod program_nautilus {\n\n    fn create_with_payer<'a>(\n        mut new_wallet: Create<'a, Wallet<'a>>,\n        rent_payer: Signer<Wallet<'a>>,\n    ) -> ProgramResult {\n        new_wallet.create_with_payer(rent_payer)\n    }\n\n    fn create_mint_with_payer<'a>(\n        mut new_mint: Create<'a, Mint<'a>>,\n        decimals: u8,\n        mint_authority: Signer<Wallet<'a>>,\n        rent_payer: Signer<Wallet<'a>>,\n    ) -> ProgramResult {\n        new_mint.create_with_payer(\n            decimals,\n            mint_authority.clone(),\n            Some(mint_authority),\n            rent_payer,\n        )\n    }\n\n    fn mint_mint_to<'a>(\n        mint: Mut<Mint<'a>>,\n        to: Mut<AssociatedTokenAccount<'a>>,\n        authority: Signer<Wallet<'a>>,\n        amount: u64,\n    ) -> ProgramResult {\n        mint.mint_to(to, authority, amount)\n    }\n\n    fn create_nft<'a>(\n        mut new_nft: Create<'a, Nft<'a>>,\n        title: String,\n        symbol: String,\n        uri: String,\n        mint_authority: Signer<Wallet<'a>>,\n    ) -> ProgramResult {\n        new_nft.create(\n            title,\n            symbol,\n            uri,\n            mint_authority.clone(),\n            mint_authority.clone(),\n            Some(mint_authority),\n        )\n    }\n\n    fn create_home<'a>(\n        mut new_home: Create<'a, Record<'a, Home>>,\n        id: u8,\n        house_number: u8,\n        street: String,\n    ) -> ProgramResult {\n        new_home.create(id, house_number, street)\n    }\n\n    fn transfer_from_home<'a>(\n        home: Mut<Record<'a, Home>>,\n        recipient: Mut<Wallet<'a>>,\n        amount: u64,\n    ) -> ProgramResult {\n        home.transfer_lamports(recipient, amount)\n    }\n\n    fn create_car<'a>(\n        mut new_car: Create<'a, Account<'a, Car>>,\n        make: String,\n        model: String,\n        purchase_authority: Pubkey,\n        operating_authority: Pubkey,\n    ) -> ProgramResult {\n        new_car.create(make, model, purchase_authority, operating_authority)\n    }\n\n    /// A simluated \"complex\" program instruction to test Nautilus.\n    /// The logic herein is just for example.\n    fn complex<'a>(\n        _authority1: Signer<Wallet<'a>>, // Marking this as `Signer` will ensure it's a signer on the tx.\n        authority2: Signer<Wallet<'a>>,\n        rent_payer1: Signer<Wallet<'a>>,\n        rent_payer2: Signer<Wallet<'a>>,\n        wallet_to_allocate: Create<'a, Wallet<'a>>, // Marking this as `Create` will ensure it hasn't been created.\n        mut wallet_to_create: Create<'a, Wallet<'a>>,\n        wallet_to_create_with_transfer_safe: Create<'a, Wallet<'a>>,\n        wallet_to_create_with_transfer_unsafe: Mut<Wallet<'a>>,\n        some_other_transfer_recipient: Mut<Wallet<'a>>,\n        amount_to_fund: u64,\n        amount_to_transfer: u64,\n    ) -> ProgramResult {\n        //\n        // /* Business Logic */\n        //\n\n        // Some random checks to simulate how custom checks might look.\n        assert!(rent_payer1\n            .owner()\n            .eq(&nautilus::solana_program::system_program::ID));\n        assert!(rent_payer2\n            .owner()\n            .eq(&nautilus::solana_program::system_program::ID));\n\n        // Even though the check will be applied via `Signer` in the function sig, you can still\n        // check yourself if you choose to.\n        assert!(authority2.is_signer());\n\n        // Even though the check will be applied via `Create` in the function sig, you can still\n        // check yourself if you choose to.\n        assert!(wallet_to_allocate.lamports() == 0);\n        assert!(wallet_to_allocate.is_writable());\n        wallet_to_allocate.allocate()?;\n\n        assert!(wallet_to_create.lamports() == 0);\n        assert!(wallet_to_create.is_writable());\n        wallet_to_create.create()?;\n\n        // Safe - checked at entry with `Create`.\n        rent_payer1.transfer_lamports(wallet_to_create_with_transfer_safe, amount_to_fund)?;\n\n        // Unsafe - not marked with `Create`.\n        rent_payer2.transfer_lamports(wallet_to_create_with_transfer_unsafe, amount_to_fund)?;\n\n        // Transfer with balance assertions\n        let from_beg_balance = authority2.lamports();\n        let to_beg_balance = some_other_transfer_recipient.lamports();\n        authority2.transfer_lamports(some_other_transfer_recipient.clone(), amount_to_transfer)?;\n        let from_end_balance = authority2.lamports();\n        let to_end_balance = some_other_transfer_recipient.lamports();\n        assert!(from_beg_balance - from_end_balance == amount_to_transfer);\n        assert!(to_end_balance - to_beg_balance == amount_to_transfer);\n        //\n        Ok(())\n    }\n}\n\n#[derive(Table)]\nstruct Home {\n    #[primary_key(autoincrement = false)]\n    id: u8,\n    house_number: u8,\n    street: String,\n}\n\n\n#[derive(State)]\n#[seeds(\n    \"car\",                  // Literal seed\n    purchase_authority,     // Self-referencing seed\n    operating_authority,    // Self-referencing seed\n)]\nstruct Car {\n    make: String,\n    model: String,\n    #[authority]\n    purchase_authority: Pubkey,\n    #[authority]\n    operating_authority: Pubkey,\n}\n\n```\n\n### 🔎 How It Works\n\n![](docs/imgs/miro_howitworks.jpg)",
        "homepage": "https://nautilus-project.vercel.app",
        "language": "Rust",
        "stargazers_count": 0,
        "license": "{\"key\":\"other\",\"name\":\"Other\",\"spdx_id\":\"NOASSERTION\",\"url\":null,\"node_id\":\"MDc6TGljZW5zZTA=\"}",
        "topics": [],
        "created_at": "2023-04-25T00:59:53Z",
        "updated_at": "2024-06-22T22:54:38Z",
        "pushed_at": "2024-06-22T22:54:35Z",
        "readme_excerpt": "Nautilus [![Rust]( [![TypeScript]( [![Python]( **Snippets from Tests:** ⚡️ Rust-Analyzer Friendly! ![](docs/imgs/non_mut_ss.png) ![](docs/imgs/non_mut_analyzer_ss.png) **More Snippets from Tests:** 🔎 How It Works ![](docs/imgs/miro_howitworks.jpg)"
      }
    },
    {
      "repo": {
        "name": "personal-website",
        "id": 698283366,
        "full_name": "joeymeere/personal-website",
        "description": null,
        "readme": "# Astro Starter Kit: Blog\n\n```sh\nnpm create astro@latest -- --template blog\n```\n\n[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/withastro/astro/tree/latest/examples/blog)\n[![Open with CodeSandbox](https://assets.codesandbox.io/github/button-edit-lime.svg)](https://codesandbox.io/p/sandbox/github/withastro/astro/tree/latest/examples/blog)\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/withastro/astro?devcontainer_path=.devcontainer/blog/devcontainer.json)\n\n> 🧑🚀 **Seasoned astronaut?** Delete this file. Have fun!\n\n![blog](https://github.com/withastro/astro/assets/2244813/ff10799f-a816-4703-b967-c78997e8323d)\n\nFeatures:\n\n- ✅ Minimal styling (make it your own!)\n- ✅ 100/100 Lighthouse performance\n- ✅ SEO-friendly with canonical URLs and OpenGraph data\n- ✅ Sitemap support\n- ✅ RSS Feed support\n- ✅ Markdown & MDX support\n\n## 🚀 Project Structure\n\nInside of your Astro project, you'll see the following folders and files:\n\n```text\n├── public/\n├── src/\n│   ├── components/\n│   ├── content/\n│   ├── layouts/\n│   └── pages/\n├── astro.config.mjs\n├── README.md\n├── package.json\n└── tsconfig.json\n```\n\nAstro looks for `.astro` or `.md` files in the `src/pages/` directory. Each page is exposed as a route based on its file name.\n\nThere's nothing special about `src/components/`, but that's where we like to put any Astro/React/Vue/Svelte/Preact components.\n\nThe `src/content/` directory contains \"collections\" of related Markdown and MDX documents. Use `getCollection()` to retrieve posts from `src/content/blog/`, and type-check your frontmatter using an optional schema. See [Astro's Content Collections docs](https://docs.astro.build/en/guides/content-collections/) to learn more.\n\nAny static assets, like images, can be placed in the `public/` directory.\n\n## 🧞 Commands\n\nAll commands are run from the root of the project, from a terminal:\n\n| Command                   | Action                                           |\n| :------------------------ | :----------------------------------------------- |\n| `npm install`             | Installs dependencies                            |\n| `npm run dev`             | Starts local dev server at `localhost:4321`      |\n| `npm run build`           | Build your production site to `./dist/`          |\n| `npm run preview`         | Preview your build locally, before deploying     |\n| `npm run astro ...`       | Run CLI commands like `astro add`, `astro check` |\n| `npm run astro -- --help` | Get help using the Astro CLI                     |\n\n## 👀 Want to learn more?\n\nCheck out [our documentation](https://docs.astro.build) or jump into our [Discord server](https://astro.build/chat).\n\n## Credit\n\nThis theme is based off of the lovely [Bear Blog](https://github.com/HermanMartinus/bearblog/).\n",
        "homepage": "https://programderived.com",
        "language": "Astro",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2023-09-29T15:06:19Z",
        "updated_at": "2024-12-30T01:59:07Z",
        "pushed_at": "2024-12-30T01:59:03Z",
        "readme_excerpt": "Astro Starter Kit: Blog [![Open in StackBlitz]( [![Open with CodeSandbox]( [![Open in GitHub Codespaces]( > 🧑🚀 **Seasoned astronaut?** Delete this file. Have fun! ![blog]( Features: ✅ Minimal styling (make it your own!) ✅ 100/100 Lighthouse performance ✅ SEO-friendly with canonical URLs and OpenGraph data ✅ Sitemap support ✅ RSS Feed support ✅ Markdown & MDX support 🚀 Project Structure Inside of your Astro project, you'll see the following folders and files: Astro looks for or files in the directory. Each page is exposed as a route based on its file name. There's nothing special about , but that's where we"
      }
    },
    {
      "repo": {
        "name": "pinocchio-util",
        "id": 1016468532,
        "full_name": "joeymeere/pinocchio-util",
        "description": "Utilities for Pinocchio programs",
        "readme": "# pinocchio-util\n\n## Overview\n\npinocchio-util is crate designed to make your life just a little bit easier when building [`pinocchio`](https://crates.io/crates/pinocchio) programs.\n\nWhile only being around for a relatively short time, Pinocchio has quickly become a go-to library for building efficient Solana programs. It strikes an effective balance between low-level control and developer ergonomics, which is one of the reasons I love it.\n\nThat being said, I've noticed a variety of recurring patterns between my own programs, and programs built by others. This crate encompasses some of the tools I've used over time to make implementing those patterns a bit easier.\n\n## Installation\n\nInstall this crate with the following command:\n\n```bash\ncargo add pinocchio-util\n```\n\nor add this to your `Cargo.toml`:\n\n```toml\npinocchio-util = \"0.0.1\"\n```\n\n## Usage\n\nLoad an immutable reference to an account's data as an arbitrary type\n\n```rust\nlet account_data = load::<UserData>(&account)?;\n```\n\nLoad a mutable reference to an account's data as an arbitrary type:\n\n```rust\nlet mut account_data = load_mut::<UserData>(&account)?;\n```\n\nExtract an account's discriminator:\n\n```rust\n/// Defaults to first 8 bytes like classic Anchor does\nlet discriminator = load_discriminator(&account, None).unwrap();\n\n/// You can also define an arbitrary length, which some programs\n/// >= Anchor 0.30.0 do to save bytes\nlet discriminator = load_discriminator(&account, Some(4)).unwrap();\n```\n\nThis crate also exposes various traits like `DataLen`, `AccountUpdates`, `Validate`, and `Context`. These are useful in their own right, but are best used with the `derive` feature outlined below.\n\n## Derive Macros\n\nEnable the `derive` feature to leverage various procedural macros:\n\n```toml\npinocchio-util = { version = \"0.0.1\", features = [\"derive\"] }\n```\n\nNow that you've enabled them, you can add them to the various structs in your program:\n\n```rust\n#[derive(Context, Validate)]\npub struct BasicContext<'info> {\n    // This is the signer\n    #[validate(is_signer)]\n    pub from: &'info AccountInfo,\n\n    // This does match my random id\n    #[validate(id = RANDOM_ID)]\n    pub to: &'info AccountInfo,\n\n    // This is a program, and this is the system program\n    #[validate(is_executable, id = pinocchio_system::ID)]\n    pub system_program: &'info AccountInfo,\n}\n\n// ...\n\nlet ctx = BasicContext::build(accounts)\n    .map_err(|_| ProgramError::InvalidArgument)?;\n\n```\n\n",
        "homepage": null,
        "language": "Rust",
        "stargazers_count": 0,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2025-07-09T04:13:49Z",
        "updated_at": "2025-07-09T04:17:41Z",
        "pushed_at": "2025-07-09T04:17:37Z",
        "readme_excerpt": "pinocchio-util Overview pinocchio-util is crate designed to make your life just a little bit easier when building [ ]( programs. While only being around for a relatively short time, Pinocchio has quickly become a go-to library for building efficient Solana programs. It strikes an effective balance between low-level control and developer ergonomics, which is one of the reasons I love it. That being said, I've noticed a variety of recurring patterns between my own programs, and programs built by others. This crate encompasses some of the tools I've used over time to make implementing those patterns a bit easier. Installation"
      }
    },
    {
      "repo": {
        "name": "react-candy-machine",
        "id": 488793120,
        "full_name": "joeymeere/react-candy-machine",
        "description": null,
        "readme": "# Introduction\n\n**Prod-ready Candy Machine Responsive UI** which can be easily customized in 5mn.\n\nAll Candy Machine V2 functionalities are implemented, auto detected and maintained up-to-date :\n\n- public mint (with countdown when date in future)\n- civic support (gatekeeper)\n- whitelist\n- presale true/false\n- end date / end number (endSettings)\n- spl-token to mint\n- **BONUS : multi mints on a single click/transaction (doesn't support gatekeeper)**\n\n![Candy Machine Preview Image](https://i.ibb.co/YPvH81j/multimints.png)\n\n### Supported Wallets\n\n![Supported Wallets](https://i.ibb.co/DC6Wt66/wallets.png)\n\nFor instructions on how to set up a V2 candy machine, please refer to Metaplex's documentation [here](https://docs.metaplex.com/candy-machine-v2/Introduction)\n\n## One-Click Vercel Deployment\n\nOne-click solution to clone this project to your GitHub and deploy the prod package on a Vercel.\nYour only task will be to customize your GitHub fork of this project and commit updates.\nVercel will automatically deploy new prod packages for each new commit.\n\n[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FFulgurus%2Fcandy-machine-v2-responsive-ui&env=REACT_APP_CANDY_MACHINE_ID,REACT_APP_SOLANA_NETWORK,REACT_APP_SOLANA_RPC_HOST&envDescription=Populate%20REACT_APP_CANDY_MACHINE_ID%20with%20your%20candy%20machine%20public%20key%2C%20REACT_APP_SOLANA_NETWORK%20with%20the%20solana%20network%20(devnet%2Fmainnet-beta)%20and%20REACT_APP_SOLANA_RPC_HOST%20with%20the%20RPC%20URL%20(example%20for%20devnet%20%3A%20https%3A%2F%2Fapi.devnet.solana.com)&envLink=https%3A%2F%2Fdocs.solana.com%2Fcluster%2Frpc-endpoints%23mainnet-beta&demo-title=My%20Demo%20Mint%20Page&demo-description=A%20one-click%20generated%20solana%20minting%20responsive%20website.&demo-url=https%3A%2F%2Fwww.mintgatsbyclub.net%2F&demo-image=https%3A%2F%2Fi.ibb.co%2FYPvH81j%2Fmultimints.png)\n\n## To thank me with a small SOL tip :]\n\n`58SevvhmaN4SfCop2HkepAWyM5zykr7Afiv91PAAfPqR`\n\n## Getting Set Up\n\n### Prerequisites\n\n**REQUIRE NODEJS VERSION <= 16 (version 17 not supported)**.\n\n* Download a Code Editor such as Visual Studio Code.\n\n* Ensure you have both `nodejs` and `yarn` installed. `nodejs` recommended version is 16.\n\n* Follow the instructions [here](https://docs.solana.com/cli/install-solana-cli-tools) to install the Solana Command Line Toolkit.\n\n* Follow the instructions [here](https://hackmd.io/@levicook/HJcDneEWF) to install the Metaplex Command Line Utility.\n  * Installing the Command Line Package is currently an advanced task that will be simplified eventually.\n\n### Installation\n\n#### 1. Fork the project & clone it. Example:\n\n```\ngit clone https://github.com/Fulgurus/candy-machine-v2-responsive-ui.git\n```\n\n#### 2. Define your environment variables (.env file)\n\nRename the `.env.example` file at the root directory to `.env` and update the following variables in the `.env` file:\n\n```\nREACT_APP_CANDY_MACHINE_ID=__PLACEHOLDER__\n```\nset __PLACEHOLDER__ with the candy machine pubkey you get once you upload & create your candy machine in Metaplex project. You can find back the value from the `.cache/temp.json` file of your Metaplex project. This file is created when you run the `ts-node candy-machine-v2-cli.ts upload ...` command.\n\n```\nREACT_APP_SOLANA_NETWORK=devnet\n```\n\nThis identifies the Solana network you want to connect to. Options are `devnet`, `testnet`, and `mainnet`.\n\n```\nREACT_APP_SOLANA_RPC_HOST=https://api.devnet.solana.com\n```\n\nThis identifies the RPC server your web app will access the Solana network through.\n\n\nIf you are using a custom SPL Token to MINT, you have two additional environment parameters to set :\n\n\n```\nREACT_APP_SPL_TOKEN_TO_MINT_NAME=\n```\n\nSpl-token name to display next the price.\n\n```\nREACT_APP_SPL_TOKEN_TO_MINT_DECIMALS=9\n```\n\nSpl-token decimals were defined during its creation with --decimals parameter. If you didn't use that parameter, then by default your SPL Token got 9 decimals.\n\nMore info about it there : https://spl.solana.com/token\n\n#### 3. Build the project and test. Go to the root project directory and type the commands :\n\nTo install dependencies :\n\n```\nyarn install\n```\n\nTo test the app locally in the development mode (localhost:3000) :\n\n```\nyarn start\n```\n\nTo build the production package (generated in build folder of the project) :\n\n```\nyarn build\n```\n\n#### 4. Customize the website UI :\n\n##### 4.1 `App.css` : update 5 main CSS variables with your custom colors :\n\n```\n:root {\n  --main-background-color: #343A50;\n  --card-background-color: #804980;\n  --countdown-background-color: #433765;\n  --main-text-color:#F7F6F4;\n  --title-text-color:#3CBA8B;\n}\n```\n\nNext to that, make sure to update background image by overwriting your own background PNG file in src/img folder.\n\n##### 4.2 `public` folder :\n\n- Update existing demo cool cats images (cool-cats.gif, logo.png) with your owns images in project `public` folder. Make sure to name them identically.\n- Add your custom website title in `index.html` : `<title>Mint Page</title>`\n\n##### 4.3 `Home.tsx` :\n\nScroll down down to line 380 (`return <main> [...]`) and start to update all titles/menu/text/images/text... as wished in the whole React HTML block.\n\nThat's it ! Enjoy your beautiful candy machine :)\n\n\n##  Available Commands Recap :\n\n### `yarn start`\n\nRuns the app in the development mode.\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\n\nThe page will reload if you make edits.\\\nYou will also see any lint errors in the console.\n\n### `yarn build`\n\nBuilds the app for production to the `build` folder.\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\n\nThe build is minified and the filenames include the hashes.\\\nYour app is ready to be deployed!\n\n## Need Help ?\n\nYou can ask for help in Stractors Discord : https://t.co/0VM0TkwiAn\n",
        "homepage": "candy-machine-ui-ten.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": "{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\",\"node_id\":\"MDc6TGljZW5zZTI=\"}",
        "topics": [],
        "created_at": "2022-05-05T01:23:41Z",
        "updated_at": "2023-01-16T04:28:21Z",
        "pushed_at": "2022-05-05T02:27:40Z",
        "readme_excerpt": "Introduction **Prod-ready Candy Machine Responsive UI** which can be easily customized in 5mn. All Candy Machine V2 functionalities are implemented, auto detected and maintained up-to-date : public mint (with countdown when date in future) civic support (gatekeeper) whitelist presale true/false end date / end number (endSettings) spl-token to mint **BONUS : multi mints on a single click/transaction (doesn't support gatekeeper)** ![Candy Machine Preview Image]( Supported Wallets ![Supported Wallets]( For instructions on how to set up a V2 candy machine, please refer to Metaplex's documentation [here]( One-Click Vercel Deployment One-click solution to clone this project to your GitHub and deploy the"
      }
    },
    {
      "repo": {
        "name": "rec-lang",
        "id": 1028734625,
        "full_name": "joeymeere/rec-lang",
        "description": "Really Easy Config (REC)",
        "readme": "# REC (Really Easy Config)\n\n## Overview\n\nREC (or \"Really Easy Config\" for short) is a typed configuration language that combines emulates the brevity of YAML, the structure of JSON, and the strict type safety + validation you'd get with a modern programming lanugage like Rust.\n\n## File Extension\n\n`.rec`\n\n## Basic Syntax\n\n### Key-Value Pairs\n\n```rec\n{\n  name: \"My Application\"\n  port: 8080\n  debug: true\n}\n```\n\n### Arrays\n\n```rec\n{\n  allowed_origins: [\"http://localhost:3000\", \"https://example.com\"]\n  ports: [8080, 8081, 8082]\n}\n```\n\n## Type System\n\n### Core Primitives\n\n- `string`: Text values in quotes\n- `int`: Integer numbers\n- `float`: Floating point numbers\n- `bool`: `true` or `false`\n- `null`: Null value\n\n### Extended Primitives\n\n#### Enums\n\nUnit enums:\n```rec\n@enum LogLevel {\n  DEBUG\n  INFO\n  WARN\n  ERROR\n}\n\n{\n  log_level: LogLevel.INFO\n}\n```\n\nStruct Enums:\n```rec\n@enum DatabaseConnection {\n  Postgres { host: string, port: int, database: string, ssl: bool }\n  MySQL { host: string, port: int, database: string }\n  SQLite { file_path: string, read_only: bool }\n  InMemory\n}\n\n@enum Command {\n  Start { port: int, workers: int }\n  Stop\n  Restart { delay_seconds: int, graceful: bool }\n  Status\n}\n\n{\n  primary_db: DatabaseConnection.Postgres {\n    host: \"localhost\"\n    port: 5432\n    database: \"myapp\"\n    ssl: true\n  }\n  \n  fallback_db: DatabaseConnection.SQLite {\n    file_path: \"/tmp/backup.db\"\n    read_only: false\n  }\n  \n  startup_command: Command.Start {\n    port: 8080\n    workers: 4\n  }\n}\n```\n\nTuple Enums\n```rec\n@enum CacheStrategy {\n  NoCache\n  FixedTTL(int)  // TTL in seconds\n  SlidingWindow(int, int)  // (window_size, ttl)\n  Custom { strategy: string, params: [string] }\n}\n\n{\n  cache: CacheStrategy.FixedTTL(300)\n  backup_cache: CacheStrategy.SlidingWindow(100, 600)\n}\n```\n\n#### HTTP/HTTPS URLs\n\n```rec\n{\n  api_endpoint: url(\"https://api.example.com\")\n  webhook: url(\"http://localhost:3000/webhook\")\n}\n```\n\n#### IPv4 Sockets\n\n```rec\n{\n  bind_address: socket(\"127.0.0.1:8080\")\n  redis_server: socket(\"192.168.1.100:6379\")\n}\n```\n\n#### ed25519 Pubkeys (Base58)\n\n```rec\n{\n  wallet_address: pubkey(\"11111111111111111111111111111111\")\n  program_id: pubkey(\"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA\")\n}\n```\n\n## Types\n\n```rec\n@type ServerConfig {\n  host: string\n  port: int\n  ssl_enabled: bool\n  ssl_cert?: string  // Optional field\n}\n\n{\n  server: ServerConfig {\n    host: \"localhost\"\n    port: 443\n    ssl_enabled: true\n    ssl_cert: \"/path/to/cert.pem\"\n  }\n}\n```\n\n## Include Statements (external files)\n\n```rec\n#include \"common/database.rec\"\n#include \"secrets/api_keys.rec\"\n\n{\n  app_name: \"MyService\"\n  // Included configs are merged here\n}\n```\n\n## Example\n\n```rec\n#include \"common/base.rec\"\n\n@enum Environment {\n  DEVELOPMENT\n  STAGING\n  PRODUCTION\n}\n\n@type DatabaseConfig {\n  url: string\n  max_connections: int\n  timeout_ms: int\n}\n\n@type ServerConfig {\n  bind_address: socket\n  environment: Environment\n  allowed_origins: [url]\n  admin_pubkey: pubkey\n}\n\n{\n  server: ServerConfig {\n    bind_address: socket(\"0.0.0.0:8080\")\n    environment: Environment.DEVELOPMENT\n    allowed_origins: [\n      url(\"http://localhost:3000\"),\n      url(\"https://app.example.com\")\n    ]\n    admin_pubkey: pubkey(\"DRpbCBMxVnDK7maPM5tGv6MvB3v1sRMC86PZ8okm21hy\")\n  }\n  \n  database: DatabaseConfig {\n    url: \"postgresql://user:pass@localhost/mydb\"\n    max_connections: 20\n    timeout_ms: 5000\n  }\n  \n  features: {\n    rate_limiting: true\n    cache_enabled: true\n    cache_ttl_seconds: 300\n  }\n}\n```\n",
        "homepage": null,
        "language": "Rust",
        "stargazers_count": 1,
        "license": null,
        "topics": [],
        "created_at": "2025-07-30T01:44:57Z",
        "updated_at": "2025-08-11T18:57:17Z",
        "pushed_at": "2025-07-30T01:51:14Z",
        "readme_excerpt": "REC (Really Easy Config) Overview REC (or \"Really Easy Config\" for short) is a typed configuration language that combines emulates the brevity of YAML, the structure of JSON, and the strict type safety + validation you'd get with a modern programming lanugage like Rust. File Extension Basic Syntax Key-Value Pairs Arrays Type System Core Primitives : Text values in quotes : Integer numbers : Floating point numbers : or : Null value Extended Primitives Enums Unit enums: Struct Enums: Tuple Enums HTTP/HTTPS URLs IPv4 Sockets ed25519 Pubkeys (Base58) Types Include Statements (external files) Example"
      }
    },
    {
      "repo": {
        "name": "rugdude-sample",
        "id": 653822137,
        "full_name": "joeymeere/rugdude-sample",
        "description": null,
        "readme": "This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n",
        "homepage": "https://ruggd.vercel.app",
        "language": "CSS",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2023-06-14T20:15:05Z",
        "updated_at": "2023-06-15T13:00:39Z",
        "pushed_at": "2023-06-21T22:34:10Z",
        "readme_excerpt": "This is a [Next.js]( project bootstrapped with [ ]( Getting Started First, run the development server: Open [ with your browser to see the result. You can start editing the page by modifying . The page auto-updates as you edit the file. [API routes]( can be accessed on [ This endpoint can be edited in . The directory is mapped to . Files in this directory are treated as [API routes]( instead of React pages. This project uses [ ]( to automatically optimize and load Inter, a custom Google Font. Learn More To learn more about Next.js, take a look"
      }
    },
    {
      "repo": {
        "name": "scripts",
        "id": 799583535,
        "full_name": "joeymeere/scripts",
        "description": "Personal scripts used for day to day life",
        "readme": "# ✨ Personal Scripts\nThese a python and shell scripts I use on my computer to automate daily tasks like:\n- Creating markdown files for task management (to-do lists, eisenhower matrix)\n- Cleaning up misc files on my desktop\n- *(TODO)* Summarize and auto-prioritize tasks and dump to a MD file for a daily to-do list\n- *(TODO)* Auto backup desktop media & archived repos to FTP\n- *(TODO)* Aggregate Solana wallet balances via a custom CLI tool\n& more to be added!\n\n## Run locally\nUse the following command in your terminal to add a cron job\n```\ncrontab -e\n```\nThen add the following to the config file using vi\n```\n<cron syntax> /usr/bin/python3 <path to script>\n```\nSave and exit vi, and verify that the job was added\n```\ncrontab -l\n```\nand you're all set!\n",
        "homepage": null,
        "language": "Shell",
        "stargazers_count": 3,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2024-05-12T15:20:01Z",
        "updated_at": "2025-07-16T15:48:52Z",
        "pushed_at": "2025-07-16T15:48:49Z",
        "readme_excerpt": "✨ Personal Scripts These a python and shell scripts I use on my computer to automate daily tasks like: Creating markdown files for task management (to-do lists, eisenhower matrix) Cleaning up misc files on my desktop *(TODO)* Summarize and auto-prioritize tasks and dump to a MD file for a daily to-do list *(TODO)* Auto backup desktop media & archived repos to FTP *(TODO)* Aggregate Solana wallet balances via a custom CLI tool & more to be added! Run locally Use the following command in your terminal to add a cron job Then add the following to the config file using"
      }
    },
    {
      "repo": {
        "name": "sheila",
        "id": 1043915870,
        "full_name": "joeymeere/sheila",
        "description": "test framework or whatever",
        "readme": "# sheila\n\nSheila gets very upset with you when your tests fail -- and she also isn't ready for production\n\n\n## Usage\n\nIf you really want to use this, add the following to your Cargo.toml:\n\n```toml\nsheila = { git = \"https://github.com/joeymeere/sheila.git\", branch = \"main\" }\n```\n",
        "homepage": "",
        "language": "Rust",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2025-08-24T22:12:57Z",
        "updated_at": "2025-08-25T17:49:57Z",
        "pushed_at": "2025-08-25T17:49:54Z",
        "readme_excerpt": "sheila Sheila gets very upset with you when your tests fail -- and she also isn't ready for production Usage If you really want to use this, add the following to your Cargo.toml:"
      }
    },
    {
      "repo": {
        "name": "snoop",
        "id": 862648366,
        "full_name": "joeymeere/snoop",
        "description": "A tool suite for inspecting Solana programs",
        "readme": "# snoop\n\nA tool suite for inspecting Solana programs\n\n## Installation\n\n### Cargo\n\n```bash\ncargo install snoop-cli\n```\n\n## Usage\n\n```bash\nsnoop --help\n```\n\n#### Disassemble\n\nDisassemble a compiled program binary, and print to stdout, or optionally write to a .s file\n\n```bash\nsnoop disassemble <path-to-program-binary> -o <path-to-output-file>\n```\n\n#### Cfg\n\nInspect the program's config\n\n```bash\nsnoop cfg <path-to-program-binary>\n```\n\n#### Graph\n\nGenerate a graphviz of a given program binary\n\n```bash\nsnoop graph <path-to-program-binary>\n```\n\n#### Functions\n\nView all functions defined in the binary\n\n```bash\nsnoop graph <path-to-program-binary>\n```\n\n## Credits\n\nThis project draws inspiration from the work of [Dean Little](https://github.com/deanmlittle) and makes heavy use of the[Solana Labs rBPF Toolkit](https://github.com/solana-labs/rbpf).\n\n## Disclaimer\n\nThis project is a work in progress. Proceed with caution.\n",
        "homepage": null,
        "language": "Rust",
        "stargazers_count": 1,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2024-09-25T00:36:31Z",
        "updated_at": "2024-09-25T22:58:02Z",
        "pushed_at": "2024-09-25T00:43:59Z",
        "readme_excerpt": "snoop A tool suite for inspecting Solana programs Installation Cargo Usage Disassemble Disassemble a compiled program binary, and print to stdout, or optionally write to a .s file Cfg Inspect the program's config Graph Generate a graphviz of a given program binary Functions View all functions defined in the binary Credits This project draws inspiration from the work of [Dean Little]( and makes heavy use of the[Solana Labs rBPF Toolkit]( Disclaimer This project is a work in progress. Proceed with caution."
      }
    },
    {
      "repo": {
        "name": "solana-signature-grinder",
        "id": 856692386,
        "full_name": "joeymeere/solana-signature-grinder",
        "description": "Grind a vanity Solana transaction signature",
        "readme": "# Solana Signature Grinder\n\nA simple Node & TS script that utilizes Web3.js 2.0 to grind vanity transaction signatures. Inspired by the 0xbeef MEV guy on Ethereum.\n\n## Usage\n\nInstall dependencies:\n\n```bash\nnpm install\n```\n\nRun a Solana test validator:\n\n```bash\nsolana-test-validator\n```\n\nGo to `src/index.ts` and change the `prefix` variable set at the bottom to your desired vanity prefix. Then run `npm test` to start the script.\n\n## License\n\nMIT\n\n## Disclaimer\n\nThis is a proof of concept and probably should not be used in production. While this doesn't send any transactions or take any external keypairs, I will give the obligatory: Run this on your own risk.\n",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 6,
        "license": "{\"key\":\"mit\",\"name\":\"MIT License\",\"spdx_id\":\"MIT\",\"url\":\"https://api.github.com/licenses/mit\",\"node_id\":\"MDc6TGljZW5zZTEz\"}",
        "topics": [],
        "created_at": "2024-09-13T02:55:53Z",
        "updated_at": "2025-09-24T04:43:13Z",
        "pushed_at": "2024-09-13T11:26:40Z",
        "readme_excerpt": "Solana Signature Grinder A simple Node & TS script that utilizes Web3.js 2.0 to grind vanity transaction signatures. Inspired by the 0xbeef MEV guy on Ethereum. Usage Install dependencies: Run a Solana test validator: Go to and change the variable set at the bottom to your desired vanity prefix. Then run to start the script. License MIT Disclaimer This is a proof of concept and probably should not be used in production. While this doesn't send any transactions or take any external keypairs, I will give the obligatory: Run this on your own risk."
      }
    },
    {
      "repo": {
        "name": "spiral",
        "id": 664374174,
        "full_name": "joeymeere/spiral",
        "description": "A desktop-based game distribution platform for web3, built with Electron",
        "readme": "no readme",
        "homepage": null,
        "language": "HTML",
        "stargazers_count": 1,
        "license": null,
        "topics": [],
        "created_at": "2023-07-09T19:29:05Z",
        "updated_at": "2023-07-09T19:29:54Z",
        "pushed_at": "2023-07-09T19:29:09Z",
        "readme_excerpt": "no readme"
      }
    },
    {
      "repo": {
        "name": "squads-actions",
        "id": 821947295,
        "full_name": "joeymeere/squads-actions",
        "description": "Blinks for Squads v4",
        "readme": "# Solana Actions and Blockchain Links (Blinks)\n\n[Read the docs to get started](https://solana.com/docs/advanced/actions)\n\nWatch this video tutorial on\n[How to Build Solana Actions](https://youtu.be/kCht01Ycif0)\n\nFind\n[more resources for Solana Actions and blinks](https://solana.com/solutions/actions)\n\nFind example code snippets on how to build several different Solana Actions:\n\n- [Deployed sample code snippets](https://solana-actions.vercel.app/)\n- [Source code for code snippets](https://github.com/solana-developers/solana-actions/tree/main/examples/next-js)\n\nInstall the `@solana/actions` SDK into your application:\n\n```shell\nnpm add @solana/actions\n```\n\n[`@solana/actions` SDK on NPM](https://www.npmjs.com/package/@solana/actions)\n\n## What are Solana Actions?\n\n[Solana Actions](https://solana.com/docs/advanced/actions#actions) are\nspecification-compliant APIs that return transactions on the Solana blockchain\nto be previewed, signed, and sent across a number of various contexts, including\nQR codes, buttons + widgets, and websites across the internet. Actions make it\nsimple for developers to integrate the things you can do throughout the Solana\necosystem right into your environment, allowing you to perform blockchain\ntransactions without needing to navigate away to a different app or webpage.\n\n## What are blockchain links (blinks)?\n\n[Blockchain links](https://solana.com/docs/advanced/actions#blinks) – or blinks\n– turn any Solana Action into a shareable, metadata-rich link. Blinks allow\nAction-aware clients (browser extension wallets, bots) to display additional\ncapabilities for the user. On a website, a blink might immediately trigger a\ntransaction preview in a wallet without going to a decentralized app; in\nDiscord, a bot might expand the blink into an interactive set of buttons. This\npushes the ability to interact on-chain to any web surface capable of displaying\na URL.\n\n## License\n\nThe Solana Actions JavaScript SDK is open source and available under the Apache\nLicense, Version 2.0. See the [LICENSE](./LICENSE) file for more info.\n",
        "homepage": "https://squads-actions-poc.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 3,
        "license": "{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\",\"node_id\":\"MDc6TGljZW5zZTI=\"}",
        "topics": [],
        "created_at": "2024-06-29T22:06:51Z",
        "updated_at": "2025-01-10T20:42:01Z",
        "pushed_at": "2024-07-20T14:36:11Z",
        "readme_excerpt": "Solana Actions and Blockchain Links (Blinks) [Read the docs to get started]( Watch this video tutorial on [How to Build Solana Actions]( Find [more resources for Solana Actions and blinks]( Find example code snippets on how to build several different Solana Actions: [Deployed sample code snippets]( [Source code for code snippets]( Install the SDK into your application: [ SDK on NPM]( What are Solana Actions? [Solana Actions]( are specification-compliant APIs that return transactions on the Solana blockchain to be previewed, signed, and sent across a number of various contexts, including QR codes, buttons + widgets, and websites across the internet."
      }
    },
    {
      "repo": {
        "name": "squads-v4-public-ui",
        "id": 852597595,
        "full_name": "joeymeere/squads-v4-public-ui",
        "description": "Squads V4 Public front end, built with NextJS",
        "readme": "# Squads V4 public UI\n\nThis repository contains the code for a source available Squads V4 user interface.\n\n## Usage on local device\n\n### Requirements\n\n- [Git](https://git-scm.com/book/en/v2/Getting-Started-Installing-Git)\n- [NodeJS](https://nodejs.org/en/download)\n- [Yarn](https://classic.yarnpkg.com/lang/en/docs/install/#windows-stable)\n\n### Installation\n\nFirst, clone this repository to a folder on your device.\n\n```\ngit clone https://github.com/Squads-Protocol/squads-v4-public-ui.git .\n```\n\nThen, install the required dependencies and build the app.\n\n```\nyarn && yarn build\n```\n\n### Start app locally\n\n```\nyarn start\n```\n\n## Configuration\n\nThere are multiple configuration options available which are stored in the cookies of the application, but can also be set via the UI.\n\n- RPC url\n\nDefault: https://api.mainnet-beta.solana.com\n\nCookie name: x-rpc-url\n\n- Multisig address\n\nCookie name: x-multisig\n\n- Vault Index\n\nCookie name: x-vault-index\n\n## Disclaimer\n\nUse this code at your own risk. \n\nBy using the provided code, you agree that the maintainer of this repository will not be help responsible for any type of issue that may have occured.\n",
        "homepage": "https://v4-public-ui.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": "{\"key\":\"other\",\"name\":\"Other\",\"spdx_id\":\"NOASSERTION\",\"url\":null,\"node_id\":\"MDc6TGljZW5zZTA=\"}",
        "topics": [],
        "created_at": "2024-09-05T04:53:56Z",
        "updated_at": "2025-01-14T14:01:05Z",
        "pushed_at": "2025-01-15T15:46:00Z",
        "readme_excerpt": "Squads V4 public UI This repository contains the code for a source available Squads V4 user interface. Usage on local device Requirements [Git]( [NodeJS]( [Yarn]( Installation First, clone this repository to a folder on your device. Then, install the required dependencies and build the app. Start app locally Configuration There are multiple configuration options available which are stored in the cookies of the application, but can also be set via the UI. RPC url Default: Cookie name: x-rpc-url Multisig address Cookie name: x-multisig Vault Index Cookie name: x-vault-index Disclaimer Use this code at your own risk. By using the provided"
      }
    },
    {
      "repo": {
        "name": "Stockpile",
        "id": 568933202,
        "full_name": "joeymeere/Stockpile",
        "description": "💸 Funding without barriers. 💸",
        "readme": "# Stockpile\n\nA global contribution engine for Web3, powered by Solana. Funding, without barriers.\n\n## What is Stockpile?\n\nStockpile is a web3 protocol designed to facilitate numerous different types of crowdfunding in a permissionless manner. The protocol leverages the Solana blockchain to provide quick, easy, and composable crowdfunding experience to meet the needs of many digital fundraisers. \n\n## Project Goals\n\nStockpile is currently undergoing closed beta and will be available to the public at a later date within the near future. In the meantime, the project plans to accomplish the following:\n\n- Basic GoFundMe style fundraisers\n- Token-Enabled Project Fundraisers\n- Yield Contribution\n- Javascript/Typescript SDK\n- Integrated on/off-ramps for Web2 native users\n\n## Why?\n\nFormerly Mobius Protocol, the Stockpile project was conceptualized during the Freedom Convoy. Our team believes in freedom of transaction, and seeing how the events unfolded for the convoy inspired us to take a different stance on the traditional crowdfunding model. We sought to right the wrongs of platforms GoFundMe that deliberately censor legitamite fundraisers for disagreements in a ToS sheet. The result, is the Stockpile project. \n\n# Building\n\n## **1. CD into App**\n\n```bash\n$ cd app\n```\n\n## **2. Run**\n\n```bash\n$ npm run dev\n```\n",
        "homepage": "https://stockpile-jade.vercel.app/",
        "language": "JavaScript",
        "stargazers_count": 1,
        "license": null,
        "topics": [],
        "created_at": "2022-11-21T18:11:58Z",
        "updated_at": "2022-12-25T00:55:20Z",
        "pushed_at": "2022-12-22T18:52:09Z",
        "readme_excerpt": "Stockpile A global contribution engine for Web3, powered by Solana. Funding, without barriers. What is Stockpile? Stockpile is a web3 protocol designed to facilitate numerous different types of crowdfunding in a permissionless manner. The protocol leverages the Solana blockchain to provide quick, easy, and composable crowdfunding experience to meet the needs of many digital fundraisers. Project Goals Stockpile is currently undergoing closed beta and will be available to the public at a later date within the near future. In the meantime, the project plans to accomplish the following: Basic GoFundMe style fundraisers Token-Enabled Project Fundraisers Yield Contribution Javascript/Typescript SDK Integrated"
      }
    },
    {
      "repo": {
        "name": "stockpile-refund",
        "id": 847992070,
        "full_name": "joeymeere/stockpile-refund",
        "description": "Create a CSV from contributors, and refund them",
        "readme": "# stockpile-refund\n Create a CSV from contributors, and refund them\n",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2024-08-26T23:46:53Z",
        "updated_at": "2024-08-26T23:46:57Z",
        "pushed_at": "2024-08-26T23:46:54Z",
        "readme_excerpt": "stockpile-refund Create a CSV from contributors, and refund them"
      }
    },
    {
      "repo": {
        "name": "stockpile-v2",
        "id": 723459551,
        "full_name": "joeymeere/stockpile-v2",
        "description": "Community derived funding for the open internet.",
        "readme": "<img src=\"https://i.imgur.com/hA5WEnT.jpg\">\n<div align=\"center\">\n  <img src=\"https://badgen.net/badge/version/2.0/blue\">\n  <img src=\"https://badgen.net/badge/docs/2.0/blue\">\n  <img src=\"https://badgen.net/badge/contributions/open/blue\">\n</div>\n<h1 align=\"center\">Stockpile v2</h1>\n<div align=\"center\">\n  <h3>Funding Without Barriers.</h3>\n  <div align=\"center\">\n    <a href=\"https://stockpile.pro\">Website</a>\n    •\n    <a href=\"https://twitter.com/GoStockpile\">Twitter</a>\n    •\n    <a href=\"https://twitter.com/GoStockpile\">LinkedIn</a>\n  </div>\n</div>\n<br>\n<h2>Overview</h2>\n<p>\n  Stockpile is a decentralized funding engine for the open-internet. Leveraging the speed of Solana, the protocol facilitates \n  general crowdfunding campaigns, quadratic funding rounds, and fair hackathons with verifiable transfers/calculations, all at\n  the speed of light. Stockpile is designed for builders and creators to leverage their communities to raise the funds needed\n  for their next endeavor, and is (to our knowledge) the first of its kind on any blockchain.\n</p>\n<h2>Highlights</h2>\n<ul>\n  <li>\n    <b>\n      General Crowdfunding:\n    </b>\n    Inspired by the likes of Kickstarter and Indiegogo, the protocol features general crowdfunding by default, which is applicable\n    for most projects and initiatives. This also features optional reward distribution via NFTs, which is handled on the frontend.\n  </li>\n  <li>\n    <b>\n      Funding Rounds:\n    </b>\n    Stockpile features permissionless, configurable quadratic funding rounds hosted on-chain. Anyone with size is permitted to create\n    a round to equitably fund projects and causes pertaining to the initiative their looking to move forward.\n  </li>\n  <li>\n    <b>\n      Milestones:\n    </b>\n    Most ecosystems structure grants in milestones. We've taken this into account, and implemented this on-chain in conjunction with both\n    general crowdfunding, and funding rounds. Milestones are created under a project, and require the user to specify a condition, along\n    with an intended completion date. In addition, future pools will be have the option to gate based on a presence of these accounts.\n    As of right now, there is no approval process, and these exist only for transparency. This feature is still experimental, and requires\n    proper frontend implementation to be useful.\n  </li>\n</ul>\n<h2>Getting Started</h2>\n<p>Ensure the Solana-CLI & Anchor-CLI are installed</p>\n\n```\nsolana --version && anchor --version\n```\n<br>\n<p>Clone this repository</p>\n    \n```\ngit clone https://github.com/StockpileProtocol/stockpile-v2.git\n```\n<br>\n<p>Build & generate an IDL</p>\n    \n```\nanchor build\n```\n<h2>Contributing</h2>\nReview the CONTRIBUTING.md file for more information on how to contribute to Stockpile v2.\n<h2>Disclaimer</h2>\n<p>\n  This code is unaudited. Copy and use at your own risk. We incur no liability in the event that a third-party uses this code, and has\n  issues deriving from exploits or any other attacks.\n</p>\n<h2>Credits</h2>\n<p>\n  Special thank you to Buffalo Joe (Solana Labs) & Valentin Madrid (Squads) for helping to get us started, and Sean (Squads) for technical advisory. \n</p>\n\n",
        "homepage": "",
        "language": "Rust",
        "stargazers_count": 0,
        "license": "{\"key\":\"gpl-3.0\",\"name\":\"GNU General Public License v3.0\",\"spdx_id\":\"GPL-3.0\",\"url\":\"https://api.github.com/licenses/gpl-3.0\",\"node_id\":\"MDc6TGljZW5zZTk=\"}",
        "topics": [],
        "created_at": "2023-11-25T18:28:29Z",
        "updated_at": "2023-12-29T04:19:17Z",
        "pushed_at": "2023-12-29T04:19:13Z",
        "readme_excerpt": "Stockpile v2 Funding Without Barriers. Overview Stockpile is a decentralized funding engine for the open-internet. Leveraging the speed of Solana, the protocol facilitates general crowdfunding campaigns, quadratic funding rounds, and fair hackathons with verifiable transfers/calculations, all at the speed of light. Stockpile is designed for builders and creators to leverage their communities to raise the funds needed for their next endeavor, and is (to our knowledge) the first of its kind on any blockchain. Highlights General Crowdfunding: Inspired by the likes of Kickstarter and Indiegogo, the protocol features general crowdfunding by default, which is applicable for most projects and initiatives."
      }
    },
    {
      "repo": {
        "name": "the-76-devs",
        "id": 815704782,
        "full_name": "joeymeere/the-76-devs",
        "description": null,
        "readme": "![image](https://github.com/matrworld/the-76-devs/assets/59782726/10bdc049-ca2f-49f5-94fc-c149681a612a)\n\n# The 76 Devs Monorepo\nA monorepo containing websites and tools used in The 76 Devs community.\n\n## Join Discord\nhttps://discord.gg/Tk5xjNjbeU\n\n## Development\n\n### Setup\n1. Make sure you have Node 20+ installed.\n2. Make sure you have `pnpm` installed. If not run `npm i -g pnpm`.\n3. Install monorepo with `pnpm i`.\n\n### Run Apps\nRun specific apps using the `pnpm dev` script and a `--filter` flag with the app name you want to run. Running `pnpm dev` without `--filter` will start all apps in the repo at once.\n\n#### Example\nTo start the dev server for the 76 website app, run `pnpm dev --filter website` where `website` is the name of the app in its `package.json`. \n\n## Apps\n### The 76 Website\n📂 `./apps/website`\n\n#### Setup\n##### Environment\n  1. Create a new `.env` file at `./apps/website/.env`.\n  2. Copy the contents from `./apps/website/.env.example` into your new `.env` file.\n  3. Fill in any empty variables as needed.\n\n#### Start Dev\nOnce setup, start the dev server by running either the `pnpm website` alias or running `pnpm dev --filter website` directly.\n",
        "homepage": null,
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2024-06-15T22:27:37Z",
        "updated_at": "2024-06-27T01:59:10Z",
        "pushed_at": "2024-06-27T01:59:07Z",
        "readme_excerpt": "![image]( The 76 Devs Monorepo A monorepo containing websites and tools used in The 76 Devs community. Join Discord Development Setup 1. Make sure you have Node 20+ installed. 2. Make sure you have installed. If not run . 3. Install monorepo with . Run Apps Run specific apps using the script and a flag with the app name you want to run. Running without will start all apps in the repo at once. Example To start the dev server for the 76 website app, run where is the name of the app in its . Apps The 76 Website"
      }
    },
    {
      "repo": {
        "name": "tritium",
        "id": 774449318,
        "full_name": "joeymeere/tritium",
        "description": "Swapping between SPL & pNFTs for Hybrid DeFi",
        "readme": "no readme",
        "homepage": "",
        "language": "Rust",
        "stargazers_count": 2,
        "license": "{\"key\":\"gpl-3.0\",\"name\":\"GNU General Public License v3.0\",\"spdx_id\":\"GPL-3.0\",\"url\":\"https://api.github.com/licenses/gpl-3.0\",\"node_id\":\"MDc6TGljZW5zZTk=\"}",
        "topics": [],
        "created_at": "2024-03-19T15:12:52Z",
        "updated_at": "2024-08-15T06:29:59Z",
        "pushed_at": "2024-08-10T02:22:42Z",
        "readme_excerpt": "no readme"
      }
    },
    {
      "repo": {
        "name": "tritium-ui-quack",
        "id": 797493338,
        "full_name": "joeymeere/tritium-ui-quack",
        "description": null,
        "readme": "This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `pages/index.tsx`. The page auto-updates as you edit the file.\n\n[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.\n\nThe `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.\n\nThis project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.\n",
        "homepage": "https://tritium-ui-quack.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 0,
        "license": null,
        "topics": [],
        "created_at": "2024-05-08T00:21:55Z",
        "updated_at": "2024-05-10T20:01:06Z",
        "pushed_at": "2024-05-10T20:01:03Z",
        "readme_excerpt": "This is a [Next.js]( project bootstrapped with [ ]( Getting Started First, run the development server: Open [ with your browser to see the result. You can start editing the page by modifying . The page auto-updates as you edit the file. [API routes]( can be accessed on [ This endpoint can be edited in . The directory is mapped to . Files in this directory are treated as [API routes]( instead of React pages. This project uses [ ]( to automatically optimize and load Inter, a custom Google Font. Learn More To learn more about Next.js, take a look"
      }
    },
    {
      "repo": {
        "name": "underdog-event-ticketing",
        "id": 644654511,
        "full_name": "joeymeere/underdog-event-ticketing",
        "description": "A simple event ticketing app for Web3, powered by Solana and Underdog Protocol",
        "readme": "# TurboTix\n### Event ticketing, powered by the Underdog Protocol.\n\nCreate events, and distribute NFT tickets both with and without a paywall.\n",
        "homepage": "https://underdog-event-ticketing.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 2,
        "license": null,
        "topics": [],
        "created_at": "2023-05-24T01:30:25Z",
        "updated_at": "2023-09-20T01:05:06Z",
        "pushed_at": "2023-09-19T18:18:08Z",
        "readme_excerpt": "TurboTix Event ticketing, powered by the Underdog Protocol. Create events, and distribute NFT tickets both with and without a paywall."
      }
    },
    {
      "repo": {
        "name": "v4",
        "id": 794574619,
        "full_name": "joeymeere/v4",
        "description": "Squads V4",
        "readme": "# Squads Protocol v4\n\n<img width=\"2500\" alt=\"Frame 13\" src=\"https://user-images.githubusercontent.com/81624955/182874414-98d63f58-450d-4520-a440-4bfda8f5329f.png\">\n\nThe v4 program is the latest upgrade to Squads Protocol. It expands the capabilities of multisig with several new features, including time locks, spending limits, roles, sub-accounts, multiple-party payments and support for address lookup tables. This program was designed to make it easier for developers to leverage multisig consensus and account abstraction on Solana, facilitating the creation of fintech-like applications and enhancing the secure management of on-chain assets.\n\n## Content\n\nThis repository contains:\n\n - The Squads Protocol v4 program.\n - The `@sqds/multisig` Typescript SDK to interact with the v4 program.\n - The `squads-multisig` crate to interact with the v4 program in Solana programs as well as Rust client applications.\n\n## Program (Smart contract) Addresses\n\nThe Squads Protocol v4 program is deployed to:\n\n - Solana Mainnet-beta: `SQDS4ep65T869zMMBKyuUq6aD6EgTu8psMjkvj52pCf`\n - Solana Devnet: `SQDS4ep65T869zMMBKyuUq6aD6EgTu8psMjkvj52pCf`\n\nBoth deployments can be verified using the [Ellipsis Labs verifiable build](https://github.com/Ellipsis-Labs/solana-verifiable-build) tool.\n\n## Responsibility\n\nBy interacting with this program, users acknowledge and accept full personal responsibility for any consequences, regardless of their nature. This includes both potential risks inherent to the smart contract, also referred to as program, as well as any losses resulting from user errors or misjudgment.\n\nBy using a multisig, it is important to acknowledge certain concepts. Here are some that could be misunderstood by users:\n - Loss of Private Keys: If a participant loses their private key, the multisig may not be able to execute transactions if a threshold number of signatures is required.\n - Single Point of Failure with Keys: If all keys are stored in the same location or device, a single breach can compromise the multisig.\n - Forgetting the Threshold: Misremembering the number of signatures required can result in a deadlock, where funds cannot be accessed.\n - No Succession Planning: If keyholders become unavailable (e.g., due to accident, death), without a plan for transition, funds may be locked forever.\n - Transfer of funds to wrong address: Funds should always be sent to the multisig vault account, and not the multisig account address. Due to the design of the Squads Protocol program, funds deposited to the multisig account may not be recoverable.\n - If the config_authority of a multisig is compromised, an attacker can change multisig settings, potentially reducing the required threshold for transaction execution or instantly being able to remove and add new members.\n - If the underlying SVM compatible blockchain undergoes a fork and a user had sent funds to the orphaned chain, the state of the blockchain may not interpret the owner of funds to be original one.\n - Users might inadvertently set long or permanent time-locks in their multisig, preventing access to their funds for that period of time.\n - Multisig participants might not have enough of the native token of the underlying SVM blockchain to pay for transaction and state fees.\n   \n## Developers\n\nYou can interact with the Squads program via our SDKs. \n\nList of SDKs:\n- Rust crate: [squads-multisig-program](https://crates.io/crates/squads-multisig-program)\n- Typescript SDK: [@sqds/multisig](https://www.npmjs.com/package/@sqds/multisig)\n\nDocumentation:\n- You can find the SDK documentation including instructions and helper functions here: https://docs.squads.so/main/v/development/development/overview.\n\n## Compiling and testing\n\nYou can compile the code with Anchor.\n```\nanchor build\n```\nIf you do not have the Solana Anchor framework CLI installed, you can do so by following [this guide](https://www.anchor-lang.com/docs/installation).\n\nTo deploy the program on a local validator instance for testing or development purposes, you can create a local instance by running this command from the [Solana CLI](https://docs.solana.com/cli/install-solana-cli-tools).\n```\nsolana-test-validator\n```\nTo run the tests, first install the node modules for the repository.\n```\nyarn\n```\nor \n```\nnpm install\n```\nAnd run these tests with this command:\n```\nyarn test\n```\n\n### Verifying the code\nFirst, compile the programs code from the `Squads-Protocol/v4` Github repository to get its bytecode.\n```\ngit clone https://github.com/Squads-Protocol/v4.git\n```\n\n```\nanchor build\n```\nNow, install the [Ellipsis Labs verifiable build](https://crates.io/crates/solana-verify) crate.\n```\ncargo install solana-verify\n```\nGet the executable hash of the bytecode from the  Squads program that was compiled.\n```\nsolana-verify get-executable-hash target/deploy/multisig.so\n```\nGet the hash from the bytecode of the on-chain Squads program you want to verify.\n```\nsolana-verify get-program-hash -u <cluster url> SQDS4ep65T869zMMBKyuUq6aD6EgTu8psMjkvj52pCf\n```\nIf the hash outputs of those two commands match, the code in the repository matches the on-chain programs code.\n\n\n## Usage\nInstructions on how to interact with the Squads V4 program can be found in [the Squads developer portal](https://docs.squads.so/main/v/development/development/overview).\n\n## Security\nSquads Protocol v4 has undergone various independent audits by leading cybersecurity and blockchain smart contract auditing firms.\n\nBelow is a list of audit reports pertaining to the v4 program. Each entry enumerates the responsible auditor and is accompanied by a corresponding GitHub link for review:\n\n - OtterSec: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/ottersec_squads_v4_audit.pdf)\n - OtterSec 2024: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/ottersec_squads_v4_audit_2024.pdf)\n - Neodyme: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/neodyme_squads_v4_report.pdf)\n - Neodyme 2024: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/neodyme_squads_v4_report_2024.pdf)\n - Certora + Formal verification: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/certora_squads_v4_security_report_and_formal_verification.pdf)\n - Certora Audit + Formal Verification (December 2023): [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/certora_squads_v4_security_report_and_formal_verification_2024.pdf)\n - Trail of Bits: [View full report](https://github.com/Squads-Protocol/v4/blob/main/audits/trail_of_bits_squads_v4_security_audit.pdf)\n\n\n## License\n\nThe primary license for Squads Protocol v4 is the Business Source License 1.1 (`BUSL-1.1`), see [LICENSE](./LICENSE). The following exceptions are not licensed under the BULS-1.1, but are licensed separately as follows:\n\n- The file <https://github.com/Squads-Protocol/v4/blob/main/programs/squads_multisig_program/src/utils/system.rs> is derived from code released under the [Apache 2.0 license](https://github.com/coral-xyz/anchor/blob/master/LICENSE) at <https://github.com/coral-xyz/anchor/blob/714d5248636493a3d1db1481f16052836ee59e94/lang/syn/src/codegen/accounts/constraints.rs#L1126-L1179>.\n- The file <https://github.com/Squads-Protocol/v4/blob/main/programs/squads_multisig_program/src/utils/small_vec.rs> is derived from code released under both the [Apache 2.0 license](https://github.com/near/borsh-rs/blob/master/LICENSE-APACHE) and the [MIT license](https://github.com/near/borsh-rs/blob/master/LICENSE-MIT) at <https://github.com/near/borsh-rs/blob/master/borsh/src/de/hint.rs> and <https://github.com/near/borsh-rs/blob/master/borsh/src/ser/mod.rs>.\n\nTo the extent that each such file incorporates code from another source, such code is licensed under its respective open source license as provided above, and the original open source code is copyrighted by its respective owner as provided above.\n",
        "homepage": "https://v4-sdk-typedoc.vercel.app",
        "language": "HTML",
        "stargazers_count": 0,
        "license": "{\"key\":\"other\",\"name\":\"Other\",\"spdx_id\":\"NOASSERTION\",\"url\":null,\"node_id\":\"MDc6TGljZW5zZTA=\"}",
        "topics": [],
        "created_at": "2024-05-01T13:54:11Z",
        "updated_at": "2024-07-22T18:38:35Z",
        "pushed_at": "2024-12-13T17:47:15Z",
        "readme_excerpt": "Squads Protocol v4 <img width=\"2500\" alt=\"Frame 13\" src=\" The v4 program is the latest upgrade to Squads Protocol. It expands the capabilities of multisig with several new features, including time locks, spending limits, roles, sub-accounts, multiple-party payments and support for address lookup tables. This program was designed to make it easier for developers to leverage multisig consensus and account abstraction on Solana, facilitating the creation of fintech-like applications and enhancing the secure management of on-chain assets. Content This repository contains: The Squads Protocol v4 program. The Typescript SDK to interact with the v4 program. The crate to interact with the"
      }
    },
    {
      "repo": {
        "name": "zircon",
        "id": 776112428,
        "full_name": "joeymeere/zircon",
        "description": "Level up your Solana development with guided courses, and curated challenges.",
        "readme": "<img src=\"https://firebasestorage.googleapis.com/v0/b/zircon-ac0b5.appspot.com/o/zircon-og.png?alt=media&token=13867ad8-795e-4c7d-ae89-08b4bd253a5e\">\n<div align=\"center\">\n  <img src=\"https://badgen.net/badge/version/beta/pink\">\n  <img src=\"https://badgen.net/badge/contributions/open/pink\">\n</div>\n<h1 align=\"center\">Zircon</h1>\n<div align=\"center\">\n  <h3>The Developer Dojo for Solana.</h3>\n</div>\n\n## What is it?\nZircon is a hub for guided and gamified courses, coding challenges reminiscent of LeetCode, and a sandbox for sharing Solana-related code snippets within minutes.\n\n## Why?\nTo put it simply: *I felt like this needed to exist*\n\nI've been helping new developers learn how to build on Solana for almost two years now, and each time I've wished something like this existed to point them to. Here are a few of the thoughts behind why I built this:\n\n- Tutorial hell is rampant in this industry. A guided course component (much like CryptoZombies & Buildspace) could help break the monotony and in-turn onboard more developers\n- Evaluating potential developers requires combing their GitHub, a potentially time-consuming process\n- Setting up an environment to share and run code snippets for Solana is annoying\n",
        "homepage": "https://zircon-teal.vercel.app",
        "language": "TypeScript",
        "stargazers_count": 16,
        "license": "{\"key\":\"other\",\"name\":\"Other\",\"spdx_id\":\"NOASSERTION\",\"url\":null,\"node_id\":\"MDc6TGljZW5zZTA=\"}",
        "topics": [
          "challenge",
          "education",
          "solana",
          "web-editor"
        ],
        "created_at": "2024-03-22T17:51:37Z",
        "updated_at": "2025-09-24T04:43:13Z",
        "pushed_at": "2024-12-30T01:41:13Z",
        "readme_excerpt": "Zircon The Developer Dojo for Solana. What is it? Zircon is a hub for guided and gamified courses, coding challenges reminiscent of LeetCode, and a sandbox for sharing Solana-related code snippets within minutes. Why? To put it simply: *I felt like this needed to exist* I've been helping new developers learn how to build on Solana for almost two years now, and each time I've wished something like this existed to point them to. Here are a few of the thoughts behind why I built this: Tutorial hell is rampant in this industry. A guided course component (much like CryptoZombies"
      }
    },
    {
      "repo": {
        "name": "pinocchio",
        "id": 1066461828,
        "full_name": "joeymeere/pinocchio",
        "description": "Create Solana programs with no dependencies attached",
        "readme": "<h1 align=\"center\">\n  <code>pinocchio</code>\n</h1>\n<p align=\"center\">\n  <img width=\"400\" alt=\"Limestone\" src=\"https://github.com/user-attachments/assets/3a1894b4-403f-4c35-90aa-548e7672fe90\" />\n</p>\n<p align=\"center\">\n  Create Solana programs with no dependencies attached.\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/anza-xyz/pinocchio/actions/workflows/main.yml\"><img src=\"https://img.shields.io/github/actions/workflow/status/anza-xyz/pinocchio/main.yml?logo=GitHub\" /></a>\n  <a href=\"https://crates.io/crates/pinocchio\"><img src=\"https://img.shields.io/crates/v/pinocchio?logo=rust\" /></a>\n</p>\n\n<p align=\"right\">\n<i>I've got no dependencies</i><br />\n<i>To hold me down</i><br />\n<i>To make me fret</i><br />\n<i>Or make me frown</i><br />\n<i>I had dependencies</i><br />\n<i>But now I'm free</i><br />\n<i>There are no dependencies on me</i>\n</p>\n\n## Overview\n\nPinocchio is a zero-dependency library to create Solana programs in Rust. It takes advantage of the way SVM loaders serialize the program input parameters into a byte array that is then passed to the program's entrypoint to define zero-copy types to read the input. Since the communication between a program and SVM loader &mdash; either at the first time the program is called or when one program invokes the instructions of another program &mdash; is done via a byte array, a program can define its own types. This completely eliminates the dependency on the `solana-program` crate, which in turn mitigates dependency issues by having a crate specifically designed to create on-chain programs.\n\nAs a result, Pinocchio can be used as a replacement for [`solana-program`](https://crates.io/crates/solana-program) to write on-chain programs, which are optimized in terms of both compute units consumption and binary size.\n\nThe library defines:\n* program entrypoint\n* core data types\n* logging macros\n* `syscall` functions\n* access to system accounts (`sysvars`)\n* cross-program invocation\n\n## Features\n\n* Zero dependencies and `no_std` crate\n* Efficient `entrypoint!` macro – no copies or allocations\n* Improved CU consumption of cross-program invocations\n\n## Getting started\n\nFrom your project folder:\n\n```bash\ncargo add pinocchio\n```\n\nThis will add `pinocchio` as a dependency to your project.\n\n## Defining the program entrypoint\n\nA Solana program needs to define an entrypoint, which will be called by the runtime to begin the program execution. The `entrypoint!` macro emits the common boilerplate to set up the program entrypoint. The macro will also set up [global allocator](https://doc.rust-lang.org/stable/core/alloc/trait.GlobalAlloc.html) and [custom panic hook](https://github.com/anza-xyz/rust/blob/2830febbc59d44bdd7ad2c3b81731f1d08b96eba/library/std/src/sys/pal/sbf/mod.rs#L49) using the [default_allocator!](https://docs.rs/pinocchio/latest/pinocchio/macro.default_allocator.html) and [default_panic_handler!](https://docs.rs/pinocchio/latest/pinocchio/macro.default_panic_handler.html) macros.\n\nThe [`entrypoint!`](https://docs.rs/pinocchio/latest/pinocchio/macro.entrypoint.html) is a convenience macro that invokes three other macros to set all symbols required for a program execution:\n\n* [`program_entrypoint!`](https://docs.rs/pinocchio/latest/pinocchio/macro.program_entrypoint.html): declares the program entrypoint\n* [`default_allocator!`](https://docs.rs/pinocchio/latest/pinocchio/macro.default_allocator.html): declares the default (bump) global allocator\n* [`default_panic_handler!`](https://docs.rs/pinocchio/latest/pinocchio/macro.default_panic_handler.html): declares the default panic handler\n\nIf all dependencies are `no_std`, you should append [`nostd_panic_handler!`](https://docs.rs/pinocchio/latest/pinocchio/macro.nostd_panic_handler.html) to declare a rust runtime panic handler. There's no need to do this if any dependency is `std` since rust compiler will emit std panic handler.\n\nTo use the `entrypoint!` macro, use the following in your entrypoint definition:\n```rust\nuse pinocchio::{\n  account_info::AccountInfo,\n  entrypoint,\n  msg,\n  ProgramResult,\n  pubkey::Pubkey\n};\n\nentrypoint!(process_instruction);\n\npub fn process_instruction(\n  program_id: &Pubkey,\n  accounts: &[AccountInfo],\n  instruction_data: &[u8],\n) -> ProgramResult {\n  msg!(\"Hello from my program!\");\n  Ok(())\n}\n```\n\nThe information from the input is parsed into their own entities:\n\n* `program_id`: the `ID` of the program being called\n* `accounts`: the accounts received\n* `instruction_data`: data for the instruction\n\n`pinocchio` also offers variations of the program entrypoint (`lazy_program_allocator`) and global allocator (`no_allocator`). In order to use these, the program needs to specify the program entrypoint, global allocator and panic handler individually. The `entrypoint!` macro is equivalent to writing:\n```rust\nprogram_entrypoint!(process_instruction);\ndefault_allocator!();\ndefault_panic_handler!();\n```\nAny of these macros can be replaced by other implementations and `pinocchio` offers a couple of variants for this.\n\n📌 [`lazy_program_entrypoint!`](https://docs.rs/pinocchio/latest/pinocchio/macro.lazy_program_entrypoint.html)\n\nThe `entrypoint!` macro looks similar to the \"standard\" one found in `solana-program`. It parses the whole input and provides the `program_id`, `accounts` and `instruction_data` separately. This consumes compute units before the program begins its execution. In some cases, it is beneficial for a program to have more control when the input parsing is happening, even whether the parsing is needed or not &mdash; this is the purpose of the [`lazy_program_entrypoint!`](https://docs.rs/pinocchio/latest/pinocchio/macro.lazy_program_entrypoint.html) macro. This macro only wraps the program input and provides methods to parse the input on demand.\n\nThe `lazy_entrypoint` is suitable for programs that have a single or very few instructions, since it requires the program to handle the parsing, which can become complex as the number of instructions increases. For *larger* programs, the [`program_entrypoint!`](https://docs.rs/pinocchio/latest/pinocchio/macro.program_entrypoint.html) will likely be easier and more efficient to use.\n\nTo use the `lazy_program_entrypoint!` macro, use the following in your entrypoint definition:\n```rust\nuse pinocchio::{\n  default_allocator,\n  default_panic_handler,\n  entrypoint::InstructionContext,\n  lazy_program_entrypoint,\n  msg,\n  ProgramResult\n};\n\nlazy_program_entrypoint!(process_instruction);\ndefault_allocator!();\ndefault_panic_handler!();\n\npub fn process_instruction(\n  mut context: InstructionContext\n) -> ProgramResult {\n    msg!(\"Hello from my lazy program!\");\n    Ok(())\n}\n```\n\nThe `InstructionContext` provides on-demand access to the information of the input:\n\n* `remaining()`: number of remaining accounts to be parsed\n* `next_account()`: parsers the next available account (can be used as many times as accounts remaining)\n* `instruction_data()`: parsers the instruction data\n* `program_id()`: parsers the program id\n\n> ⚠️ **Note:**\n> The `lazy_program_entrypoint!` does not set up a global allocator nor a panic handler. A program should explicitly use one of the provided macros to set them up or include its own implementation.\n\n📌 [`no_allocator!`](https://docs.rs/pinocchio/latest/pinocchio/macro.no_allocator.html)\n\nWhen writing programs, it can be useful to make sure the program does not attempt to make any allocations. For this cases, `pinocchio` includes a [`no_allocator!`](https://docs.rs/pinocchio/latest/pinocchio/macro.no_allocator.html) macro that sets a global allocator just panics at any attempt to allocate memory.\n\nTo use the `no_allocator!` macro, use the following in your entrypoint definition:\n```rust\nuse pinocchio::{\n  account_info::AccountInfo,\n  default_panic_handler,\n  msg,\n  no_allocator,\n  program_entrypoint,\n  ProgramResult,\n  pubkey::Pubkey\n};\n\nprogram_entrypoint!(process_instruction);\ndefault_panic_handler!();\nno_allocator!();\n\npub fn process_instruction(\n  program_id: &Pubkey,\n  accounts: &[AccountInfo],\n  instruction_data: &[u8],\n) -> ProgramResult {\n  msg!(\"Hello from `no_std` program!\");\n  Ok(())\n}\n```\n> ⚠️ **Note:**\n> The `no_allocator!` macro can also be used in combination with the `lazy_program_entrypoint!`.\n\n## Crate feature: `std`\n\nBy default, `pinocchio` is a `no_std` crate. This means that it does not use any code from the standard (`std`) library. While this does not affect how `pinocchio` is used, there is one particular apparent difference. In a `no_std` environment, the `msg!` macro does not provide any formatting options since the `format!` macro requires the `std` library. In order to use `msg!` with formatting, the `std` feature should be enabled when adding `pinocchio` as a dependency:\n```\npinocchio = { version = \"0.7.0\", features = [\"std\"] }\n```\n\nInstead of enabling the `std` feature to be able to format log messages with `msg!`, it is recommended to use the [`pinocchio-log`](https://crates.io/crates/pinocchio-log) crate. This crate provides a lightweight `log!` macro with better compute units consumption than the standard `format!` macro without requiring the `std` library.\n\n## Advance entrypoint configuration\n\nThe symbols emitted by the entrypoint macros &mdash; program entrypoint, global allocator and default panic handler &mdash; can only be defined once globally. If the program crate is also intended to be used as a library, it is common practice to define a Cargo [feature](https://doc.rust-lang.org/cargo/reference/features.html) in your program crate to conditionally enable the module that includes the `entrypoint!` macro invocation. The convention is to name the feature `bpf-entrypoint`.\n\n```rust\n#[cfg(feature = \"bpf-entrypoint\")]\nmod entrypoint {\n  use pinocchio::{\n    account_info::AccountInfo,\n    entrypoint,\n    msg,\n    ProgramResult,\n    pubkey::Pubkey\n  };\n\n  entrypoint!(process_instruction);\n\n  pub fn process_instruction(\n    program_id: &Pubkey,\n    accounts: &[AccountInfo],\n    instruction_data: &[u8],\n  ) -> ProgramResult {\n    msg!(\"Hello from my program!\");\n    Ok(())\n  }\n}\n```\nWhen building the program binary, you must enable the `bpf-entrypoint` feature:\n```bash\ncargo build-sbf --features bpf-entrypoint\n```\n\n## License\n\nThe code is licensed under the [Apache License Version 2.0](LICENSE)\n\nThe library in this repository is based/includes code from:\n* [`nitrate`](https://github.com/nifty-oss/nitrate)\n* [`solana-nostd-entrypoint`](https://github.com/cavemanloverboy/solana-nostd-entrypoint/tree/main)\n* [`solana-sdk`](https://github.com/anza-xyz/solana-sdk)\n",
        "homepage": "",
        "language": null,
        "stargazers_count": 0,
        "license": "{\"key\":\"apache-2.0\",\"name\":\"Apache License 2.0\",\"spdx_id\":\"Apache-2.0\",\"url\":\"https://api.github.com/licenses/apache-2.0\",\"node_id\":\"MDc6TGljZW5zZTI=\"}",
        "topics": [],
        "created_at": "2025-09-29T14:12:45Z",
        "updated_at": "2025-09-29T14:12:45Z",
        "pushed_at": "2025-09-29T14:27:10Z",
        "readme_excerpt": "pinocchio Create Solana programs with no dependencies attached. I've got no dependencies To hold me down To make me fret Or make me frown I had dependencies But now I'm free There are no dependencies on me Overview Pinocchio is a zero-dependency library to create Solana programs in Rust. It takes advantage of the way SVM loaders serialize the program input parameters into a byte array that is then passed to the program's entrypoint to define zero-copy types to read the input. Since the communication between a program and SVM loader &mdash; either at the first time the program is"
      }
    },
    {
      "repo": {
        "name": "awesome-solana-oss",
        "id": 737321443,
        "full_name": "StockpileLabs/awesome-solana-oss",
        "description": "Compilation of awesome open-source Solana repositories on GitHub!",
        "readme": "# 🚀 Awesome Solana (Open-Source Edition)\n\n[![Awesome](https://i.imgur.com/fZVEgpL.png)](https://github.com/sindresorhus/awesome)\n\n_A curated compilation of awesome open-source Solana repositories on Github._\n\nThis repo is for:\n\n-   Discovering code to learn from\n-   Finding ecosystem projects to contribute to\n-   Getting a gauge of the Solana open-source ecosystem\n\nSubmit a PR if you have a suggested add! Repositories on this list must have a valid license (MIT, GPL 3.0, Apache 2.0, etc..).\n\n<br>\n\n## 🏃♂️ Good Starters\nProjects that are worth looking into for new developers\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Anchor                 | [Coral](https://twitter.com/xNFT_Backpack)                                          | Yes                  | <a href=\"https://github.com/coral-xyz/anchor\" target=\"_blank\">View</a>                     |\n| Create-Solana-Dapp     | [Solana Developers](https://twitter.com/solana_devs)                                | Yes                  | <a href=\"https://github.com/solana-developers/create-solana-dapp\" target=\"_blank\">View</a> |\n| Solana Project Template| [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/solana-project-template\" target=\"_blank\">View</a>|\n| Solana Playground      | [Solana Playground](https://github.com/solana-playground)                           | Yes                  | <a href=\"https://github.com/solana-playground/solana-playground\" target=\"_blank\">View</a>  |\n| Zircon                 | [Joey Meere](https://github.com/joeymeere)                                          | No                   | <a href=\"https://github.com/joeymeere/zircon\" target=\"_blank\">View</a>                     |\n| SOLfees.fyi            | [Ronny Haase](https://twitter.com/ronnyhaase)                                       | Yes                  | <a href=\"https://github.com/ronnyhaase/solfees.fyi\" target=\"_blank\">View</a>               |\n\n<br>\n\n## 💻 Dev Tooling\nProjects that will may help in your travels as a Solana developer\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Anchor                 | [Coral](https://twitter.com/xNFT_Backpack)                                          | Yes                  | <a href=\"https://github.com/coral-xyz/anchor\" target=\"_blank\">View</a>                     |\n| Create-Solana-Dapp     | [Solana Developers](https://twitter.com/solana_devs)                                | Yes                  | <a href=\"https://github.com/solana-developers/create-solana-dapp\" target=\"_blank\">View</a> |\n| Solana Project Template| [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/solana-project-template\" target=\"_blank\">View</a>|\n| Anza Wallet Adapter    | [Anza](https://x.com/anza_xyz)                                                      | Yes                  | <a href=\"https://github.com/anza-xyz/wallet-adapter\" target=\"_blank\">View</a>              |\n| Solana Wallet Adapter  | [Solana Labs](https://twitter.com/solana)                                           | Yes                  | <a href=\"https://github.com/solana-labs/wallet-adapter\" target=\"_blank\">View</a>           |\n| Mollusk                | [Joe Caufield](https://github.com/buffalojoec)                                      | Yes                  | <a href=\"https://github.com/buffalojoec/mollusk\" target=\"_blank\">View</a>                  |\n| LiteSVM                | [Aursen](https://github.com/Aursen), [Kevin Heavey](https://github.com/kevinheavey) | Yes                  | <a href=\"https://github.com/LiteSVM/litesvm\" target=\"_blank\">View</a>                      |\n| Solana Mobile Starter  | [Solend](https://twitter.com/solendprotocol)                                        | Yes                  | <a href=\"https://github.com/solendprotocol/solana-mobile-starter-kit\" target=\"_blank\">View</a>|\n| Shank                  | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/shank\" target=\"_blank\">View</a>            |\n| Solita                 | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/solita\" target=\"_blank\">View</a>           |\n| Umi                    | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/umi\" target=\"_blank\">View</a>              |\n| Kinobi                 | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/kinobi\" target=\"_blank\">View</a>           |\n| Solathon               | [SuperteamDAO](https://twitter.com/superteamdao)                                    | Yes                  | <a href=\"https://github.com/SuperteamDAO/solathon\" target=\"_blank\">View</a>                |\n| Explorer Kit           | [SolanaFM](https://twitter.com/solanafm)                                            | Yes                  | <a href=\"https://github.com/solana-fm/explorer-kit\" target=\"_blank\">View</a>               |\n| Dreamcast              | [Joey Meere](https://github.com/joeymeere)                                          | Yes                  | <a href=\"https://github.com/joeymeere/dreamcast\" target=\"_blank\">View</a>                  |\n| Squads CLI             | [Squads](https://twitter.com/squadsprotocol)                                        | Yes                  | <a href=\"https://github.com/Squads-Protocol/squads-cli\" target=\"_blank\">View</a>           |\n| Distributor            | [Jito Labs](https://twitter.com/jito_sol)                                           | Yes                  | <a href=\"https://github.com/jito-foundation/distributor\" target=\"_blank\">View</a>          |\n| Metaboss               | [Metafrost](https://github.com/samuelvanderwaal/metaboss)                           | Yes                  | <a href=\"https://github.com/samuelvanderwaal/metaboss\" target=\"_blank\">View</a>            |\n| Soda                   | [Web3 Builders Alliance](https://twitter.com/comebuidlwithus)                       | Yes                  | <a href=\"https://github.com/Web3-Builders-Alliance/soda\" target=\"_blank\">View</a>          |\n| Sol4k                  | [Sasha Shpota](https://twitter.com/sashashpota)                                     | Yes                  | <a href=\"https://github.com/sol4k/sol4k\" target=\"_blank\">View</a>                          |\n| Arsnal                 | [Anish De](https://twitter.com/anishde10)                                           | Yes                  | <a href=\"https://github.com/AnishDe12020/arsnal\" target=\"_blank\">View</a>                  |\n| Solnet                 | [Block Mountain](https://twitter.com/blockmountainio)                               | Yes                  | <a href=\"https://github.com/bmresearch/Solnet\" target=\"_blank\">View</a>                    |\n| Builderz dApp Scaffold | [Builderz](https://twitter.com/builderz__)                                          | Yes                  | <a href=\"https://github.com/builderz-labs/builderz-solana-dapp-scaffold\" target=\"_blank\">View</a> |\n| Builderz xNFT Scaffold | [Builderz](https://twitter.com/builderz__)                                          | Yes                  | <a href=\"https://github.com/builderz-labs/builderz-xNFT-scaffold-next\" target=\"_blank\">View</a>   |\n| PubKey Stack           | [Beeman](https://twitter.com/beeman_nl)                                             | Yes                  | <a href=\"https://github.com/pubkeyapp/pubkey-stack\" target=\"_blank\">View</a>               |\n| Lighthouse             | [Jac0xb](https://twitter.com/jacobdotsol)                                           | Yes                  | <a href=\"https://github.com/Jac0xb/lighthouse\" target=\"_blank\">View</a>                    |\n| Skeet                  | [Skeet Dev](https://twitter.com/SkeetDev)                                           | Yes                  | <a href=\"https://github.com/elsoul/skeet-cli\" target=\"_blank\">View</a>                     |\n| Turnkey Client         | [Eliascm17](https://github.com/Eliascm17)                                           | Yes                  | <a href=\"https://github.com/Eliascm17/turnkey\" target=\"_blank\">View</a>                    |\n| Solana Wallet Names    | [Portal Payments](https://twitter.com/portalpayments)                               | No                   | <a href=\"https://github.com/portalpayments/solana-wallet-names\" target=\"_blank\">View</a>   |\n| AnchorPy               | [Kevin Heavey](https://github.com/kevinheavey)                                      | No                   | <a href=\"https://github.com/kevinheavey/anchorpy\" target=\"_blank\">View</a>                 |\n| Nautilus               | [Nautilus Project](https://github.com/nautilus-project)                             | No                   | <a href=\"https://github.com/nautilus-project/nautilus\" target=\"_blank\">View</a>            |\n| Splogger               | [Nautilus Project](https://github.com/nautilus-project)                             | No                   | <a href=\"https://github.com/nautilus-project/splogger\" target=\"_blank\">View</a>            |\n| Waverider              | [Nautilus Project](https://github.com/nautilus-project)                             | No                   | <a href=\"https://github.com/nautilus-project/waverider\" target=\"_blank\">View</a>           |\n\n<br>\n\n## 💰 DeFi\nProjects related to financial products on Solana\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Openbook v2            | [Openbook](https://twitter.com/openbookdex)                                         | Yes                  | <a href=\"https://github.com/openbook-dex/openbook-v2\" target=\"_blank\">View</a>              |\n| Phoenix v1             | [Ellipsis Labs](https://twitter.com/ellipsis_labs)                                  | Yes                  | <a href=\"https://github.com/Ellipsis-Labs/phoenix-v1\" target=\"_blank\">View</a>              |\n| Solend Programs        | [Solend](https://twitter.com/solendprotocol)                                        | Yes                  | <a href=\"https://github.com/solendprotocol/solana-program-library\" target=\"_blank\">View</a> |\n| Mango v4               | [Mango Markets](https://twitter.com/mangomarkets)                                   | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-v4\" target=\"_blank\">View</a>        |\n| Mango v4 UI            | [Mango Markets](https://twitter.com/mangomarkets)                                   | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-v4-ui\" target=\"_blank\">View</a>     |\n| Mango Feeds            | [Mango Markets](https://twitter.com/mangomarkets)                                   | Yes                  | <a href=\"https://github.com/blockworks-foundation/mango-feeds\" target=\"_blank\">View</a>     |\n| Drift v2               | [Drift Protocol](https://x.com/DriftProtocol)                                       | Yes                  | <a href=\"https://github.com/drift-labs/protocol-v2\" target=\"_blank\">View</a>                |\n| Drift Keeper Bots      | [Drift Protocol](https://x.com/DriftProtocol)                                       | Yes                  | <a href=\"https://github.com/drift-labs/keeper-bots-v2\" target=\"_blank\">View</a>             |\n| Kamino Lend            | [Hubble Protocol](https://twitter.com/Kamino_Finance)                               | Yes                  | <a href=\"https://github.com/Kamino-Finance/klend\" target=\"_blank\">View</a>                  |\n| MarginFi v2            | [MrgnLabs](https://twitter.com/marginfi)                                            | Yes                  | <a href=\"https://github.com/mrgnlabs/marginfi-v2\" target=\"_blank\">View</a>                  |\n| Mrgn TS                | [MrgnLabs](https://twitter.com/marginfi)                                            | Yes                  | <a href=\"https://github.com/mrgnlabs/mrgn-ts\" target=\"_blank\">View</a>                      |\n| Raydium UI             | [Raydium](https://twitter.com/raydiumprotocol)                                      | Yes                  | <a href=\"https://github.com/raydium-io/raydium-frontend\" target=\"_blank\">View</a>           |\n| Whirlpools CLMM        | [Orca_so](https://twitter.com/orca_so)                                              | Yes                  | <a href=\"https://github.com/orca-so/whirlpools\" target=\"_blank\">View</a>                    |\n| Raydium CLMM           | [Raydium](https://twitter.com/RaydiumProtocol)                                      | Yes                  | <a href=\"https://github.com/raydium-io/raydium-clmm\" target=\"_blank\">View</a>               |\n| Saber                  | [Saber DAO](https://twitter.com/The_Saber_DAO)                                      | Yes                  | <a href=\"https://github.com/saber-hq/stable-swap\" target=\"_blank\">View</a>                  |\n| Step Reward Pool       | [Step Finance](https://twitter.com/StepFinance_)                                    | Yes                  | <a href=\"https://github.com/step-finance/step-staking\" target=\"_blank\">View</a>             |\n| Step Staking           | [Step Finance](https://twitter.com/StepFinance_)                                    | No                   | <a href=\"https://github.com/step-finance/reward-pool\" target=\"_blank\">View</a>              |\n\n<br>\n\n## 🛠️ Infrastructure\nProjects related to general infrastructure\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Backpack               | [Coral](https://twitter.com/xNFT_Backpack)                                          | Yes                  | <a href=\"https://github.com/coral-xyz/backpack\" target=\"_blank\">View</a>                       |\n| TinyDancer             | [TinyDancer](https://twitter.com/tinydancerio)                                      | Yes                  | <a href=\"https://github.com/tinydancer-io/tinydancer\" target=\"_blank\">View</a>                 |\n| Light Protocol         | [Light Protocol](https://twitter.com/lightprotocol)                                 | Yes                  | <a href=\"https://github.com/Lightprotocol/light-protocol\" target=\"_blank\">View</a>             |\n| Squads MPL             | [Squads](https://twitter.com/squadsprotocol)                                        | Yes                  | <a href=\"https://github.com/Squads-Protocol/squads-mpl\" target=\"_blank\">View</a>               |\n| Blockbuster            | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/blockbuster\" target=\"_blank\">View</a>          |\n| Lite RPC               | [Blockworks](https://twitter.com/blockworks_)                                       | Yes                  | <a href=\"https://github.com/blockworks-foundation/lite-rpc\" target=\"_blank\">View</a>           |\n| Elusiv                 | [Elusiv](https://twitter.com/elusivprivacy)                                         | Yes                  | <a href=\"https://github.com/elusiv-privacy/elusiv\" target=\"_blank\">View</a>                    |\n| Jito Relayer           | [Jito Labs](https://twitter.com/jito_sol)                                           | Yes                  | <a href=\"https://github.com/jito-foundation/jito-relayer\" target=\"_blank\">View</a>             |\n| Spiral Safe            | [Spiral Safe](https://twitter.com/spiralsafe)                                       | Yes                  | <a href=\"https://github.com/Spiral-Safe\" target=\"_blank\">View</a>                              |\n| Space Wrapper          | [Space Operator](https://twitter.com/_space_operator)                               | No                   | <a href=\"https://github.com/space-operator/space-wrapper\" target=\"_blank\">View</a>             |\n\n<br>\n\n## 💸 Payments\nProjects related to payment processing for various use-cases\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Stockpile Grants Stack | [Joey Meere](https://twitter.com/joeymeere)                                         | Yes                  | <a href=\"https://github.com/StockpileLabs/stockpile-lite\" target=\"_blank\">View</a>         |\n| Trusts Protocol        | [Joey Meere](https://twitter.com/joeymeere)                                         | Yes                  | <a href=\"https://github.com/joeymeere/trusts\" target=\"_blank\">View</a>                     |\n| Code Program Library   | [GetCode](https://twitter.com/getcode)                                              | Yes                  | <a href=\"https://github.com/code-payments/code-program-library\" target=\"_blank\">View</a>   |\n| Code Android App       | [GetCode](https://twitter.com/getcode)                                              | Yes                  | <a href=\"https://github.com/code-payments/code-android-app\" target=\"_blank\">View</a>       |\n| Stockpile v2           | [Joey Meere](https://twitter.com/joeymeere)                                         | Yes                  | <a href=\"https://github.com/StockpileLabs/stockpile-v2\" target=\"_blank\">View</a>           |\n\n<br>\n\n## 💾 Client & Validator Tooling\nProjects related to validator and client setup and configuration\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Jito Solana            | [Jito Labs](https://twitter.com/jito_sol)                                           | Yes                  | <a href=\"https://github.com/jito-foundation/jito-solana\" target=\"_blank\">View</a>              |\n| Jito Stakenet          | [Jito Labs](https://twitter.com/jito_sol)                                           | Yes                  | <a href=\"https://github.com/jito-foundation/stakenet\" target=\"_blank\">View</a>             |\n| Yellowstone gRPC       | [Triton One](https://triton.one)                                                    | Yes                  | <a href=\"https://github.com/rpcpool\" target=\"_blank\">View</a>                                  |\n| solv                   | [Epics DAO](https://twitter.com/EpicsDAO2)                                          | Yes                  | <a href=\"https://github.com/EpicsDAO/solv\" target=\"_blank\">View</a>                            |\n\n<br>\n\n## 🪙 Token & NFT Tooling\nProjects related to SPL, Token 2022, and the various NFT standards\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Umi                    | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/umi\" target=\"_blank\">View</a>              |\n| Bubblegum              | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/mpl-bubblegum\" target=\"_blank\">View</a>    |\n| Inscription            | [Metaplex](https://twitter.com/metaplex)                                            | Yes                  | <a href=\"https://github.com/metaplex-foundation/mpl-inscription\" target=\"_blank\">View</a>  |\n| BYO Mint               | [0xLarry](https://twitter.com/0xLarry8)                                             | Yes                  | <a href=\"https://github.com/0xlarry/byo_mint\" target=\"_blank\">View</a>                     |\n| McBurnJS               | [McDegensDAO](https://twitter.com/McDegensDAO)                                      | Yes                  | <a href=\"https://github.com/McDegens-DAO/mcburn-js/\" target=\"_blank\">View</a>              |\n| cNFT Spam Filter       | [Solarnius](https://twitter.com/solarnius)                                          | Yes                  | <a href=\"https://github.com/filtoor/cnft-spam-filter\" target=\"_blank\">View</a>             |\n| Underdog SDK           | [Underdog](https://twitter.com/backanunderdog)                                      | No                   | <a href=\"https://github.com/UnderdogProtocol/js\" target=\"_blank\">View</a>                  |\n\n<br>\n\n## 🏫 Education\nEducational content related to building on Solana\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Solana Playground      | [Solana Playground](https://github.com/solana-playground)                           | Yes                  | <a href=\"https://github.com/solana-playground/solana-playground\" target=\"_blank\">View</a>  |\n| Zircon                 | [Joey Meere](https://github.com/joeymeere)                                          | No                   | <a href=\"https://github.com/joeymeere/zircon\" target=\"_blank\">View</a>                     |\n| Pyre                   | [Helius](https://twitter.com/heliuslabs)                                            | No                   | <a href=\"https://github.com/helius-labs/pyre\" target=\"_blank\">View</a>                     |\n| SolWebKit                   | [Metasal](https://twitter.com/metasal_)                                            | Yes                  | <a href=\"https://github.com/metasal1/solana-web3-v2-demo\" target=\"_blank\">View</a>                     |\n\n<br>\n\n## 📊 Data\nProjects related to on-chain data\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Xray                   | [Helius](https://twitter.com/heliuslabs)                                            | Yes                  | <a href=\"https://github.com/helius-labs/xray\" target=\"_blank\">View</a>                     |\n| Explorer Kit           | [SolanaFM](https://twitter.com/solanafm)                                            | Yes                  | <a href=\"https://github.com/solana-fm/explorer-kit\" target=\"_blank\">View</a>               |\n| SOL CLI Explorer       | [cavemanloverboy](https://github.com/cavemanloverboy)                               | Yes                  | <a href=\"https://github.com/cavemanloverboy/sol\" target=\"_blank\">View</a>                  |\n\n<br>\n\n## 💼 Wallets\nWallet interfaces\n| Name                    | Team                                           | Actively Maintained? | Stack                | License     | Link                                                                                       |\n| ----------------------- | ---------------------------------------------- | -------------------- | -------------------- | ----------- | ------------------------------------------------------------------------------------------ |\n| Helium Wallet App       | [Helium](https://x.com/helium)                 | Yes                  | TS, React Native     | Apache 2.0  | <a href=\"https://github.com/helium/wallet-app\" target=\"_blank\">View</a>                     |\n| Espresso Cash           | [Espresso Cash](https://x.com/espresso_cash)   | Yes                  | Dart, Flutter        | GNU         | <a href=\"https://github.com/espresso-cash/espresso-cash-public\" target=\"_blank\">View</a>      |\n| Unruggable              | [Unruggable](https://x.com/unruggable_io)      | Yes                  | Rust, Dioxus         | TBD         | <a href=\"https://github.com/hogyzen12/unruggable-app\" target=\"_blank\">View</a>               |\n| Darklake Android Wallet | [Darklake Labs](https://x.com/darklakefi)      | Yes                  | Kotlin               | GNU         | <a href=\"https://github.com/darklakefi/android-wallet\" target=\"_blank\">View</a>               |\n| Gem Wallet Android      | [Gem Wallet](https://x.com/GemWalletApp)       | Yes                  | Kotlin, Compose      | GPL-3.0     | <a href=\"https://github.com/gemwalletcom/gem-android\" target=\"_blank\">View</a>               |\n| Gem Wallet iOS          | [Gem Wallet](https://x.com/GemWalletApp)       | Yes                  | Swift                | GPL-3.0     | <a href=\"https://github.com/gemwalletcom/gem-ios\" target=\"_blank\">View</a>               |\n| Alpha Wallet            | [Cloakd](https://x.com/CloakdDev)              | No                   | JS, Chrome Extension | MIT         | <a href=\"https://github.com/alphabatem/alpha-wallet\" target=\"_blank\">View</a>               |\n\n\n<br>\n\n## ❓ Miscellaneous\nProjects that lack a specific category listed above\n| Name                   | Team / Dev                                                                          | Actively Maintained? | Link                                                             |\n| ---------------------- | ----------------------------------------------------------------------------------- | -------------------- | ---------------------------------------------------------------- |\n| Ore v1                 | [Ore Team](https://x.com/OREsupply)                                                 | Yes                  | <a href=\"https://github.com/regolith-labs/ore\" target=\"_blank\">View</a>      |\n| PubKey Link            | [Beeman](https://twitter.com/beeman_nl)                                             | Yes                  | <a href=\"https://github.com/pubkeyapp/pubkey-link\" target=\"_blank\">View</a>  |\n| Jinbag                 | [shockz09](https://github.com/shockz09)                                             | Yes                  | <a href=\"https://github.com/shockz09/Jinbag\" target=\"_blank\">View</a>        |\n| marketplace contracts  | [SoundworkSounds](https://x.com/SoundworkSounds/)                                   | Yes                  | <a href=\"https://github.com/SoundWorkLabs/marketplace-contracts\" target=\"_blank\">View</a> |\n| Solana Auth            | [Crossmint](https://twitter.com/crossmint)                                          | No                   | <a href=\"https://github.com/Crossmint/solana-auth\" target=\"_blank\">View</a>  |\n",
        "homepage": "",
        "language": null,
        "stargazers_count": 304,
        "license": null,
        "topics": [
          "open-source",
          "solana"
        ],
        "created_at": "2023-12-30T16:01:12Z",
        "updated_at": "2025-10-08T14:06:11Z",
        "pushed_at": "2025-09-12T08:14:51Z",
        "readme_excerpt": "🚀 Awesome Solana (Open-Source Edition) [![Awesome]( _A curated compilation of awesome open-source Solana repositories on Github._ This repo is for: Discovering code to learn from Finding ecosystem projects to contribute to Getting a gauge of the Solana open-source ecosystem Submit a PR if you have a suggested add! Repositories on this list must have a valid license (MIT, GPL 3.0, Apache 2.0, etc..). 🏃♂️ Good Starters Projects that are worth looking into for new developers 💻 Dev Tooling Projects that will may help in your travels as a Solana developer 💰 DeFi Projects related to financial products on Solana 🛠️"
      }
    }
  ],
  "recent_github_activity": "In the last 90 days, the developer engaged in 4 public GitHub events across 2 repositories, including one own repository and one external repository. In their own repository, joeymeere/pinocchio, they created a new branch named 'jm/account_info_from_raw' and made a push with one commit titled 'temp: make Account public + raw ptr access'. In the external repository StockpileLabs/awesome-solana-oss, the developer contributed by pushing seven commits to the main branch, which included additions related to Solana native wallets and licenses. Additionally, they closed and merged a pull request (#25) titled 'add solana native wallets'. The activity indicates involvement with Solana-related projects and branch management, including code contributions and pull request handling."
}
